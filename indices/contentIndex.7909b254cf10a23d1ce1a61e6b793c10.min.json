{"/":{"title":"üå± digital garden","content":"**W**elcome to my first attempt at creating a üå± digital garden. \n\nMy name is [Ivanka](https://itodorova.dev) and I am currently studying **Computer Science** at [New Bulgarian University](https://nbu.bg/).\n\nAs of now, this place mostly consists of computer science-y things, documented during my study, but my interests go beyond that topic. \n\nI love, *love* binging [[notes/recreational/TV Shows|TV Shows]] \u0026 [[notes/recreational/Movies|Movies]]. I also play games (mostly World of Warcraft or CS:GO). I read teen fantasy [[notes/recreational/Bookshelf|books]], almost exclusively üôà.\n\nI use **tags** to group notes related to a similar topic. Some tags are created for the sole purpose of [[notes/projects/Self Quizing|searching for specific content programmatically]].","lastmodified":"2022-12-29T22:08:00.939376594Z","tags":null},"/notes/Obsidian":{"title":"Obsidian Tips \u0026 Tricks","content":"\nI tend to avoid as much as possible the use of libraries and plugins in my life that I am also applying it to my journey in Obsidian where possible.\n\nIn this node, I will be adding **scripts** \u0026 **CSS** snippets that improve my notes in [Obsidian](https://obsidian.md/).\n\n## Adaptive Images\n\nThis is a [snippet I found on Obsidian's forums](https://forum.obsidian.md/t/auto-adaptive-images-for-dark-light-theme/13494), it uses CSS to invert the colors of images based on what theme you're previewing a document. I have modified it a bit to support images added using: `![alt text](./src/img.jpg)` markdown synthax.\n\n```css\n.theme-dark img {\n    display: block;\n    max-width: 80%;\n    padding: 0 auto 0 auto;\n    outline: none;\n    margin-left: auto;\n    margin-right: auto;\n    mix-blend-mode: screen;\n    filter: opacity(1);\n}\n\n.theme-light img {\n    display: block;\n    max-width: 80%;\n    padding: 0 auto 0 auto;\n    outline: none;\n    margin-left: auto;\n    margin-right: auto;\n    mix-blend-mode: multiply;\n    filter: opacity(0.95);\n}\n\n/*Emblemed images blending tweaks */\n\n.theme-dark .popover.hover-popover .markdown-preview-view img {\n    mix-blend-mode: screen;\n    filter: opacity(1);\n}\n\n.theme-light .popover.hover-popover .markdown-preview-view img {\n    mix-blend-mode: multiply;\n    filter: opacity(0.95);\n}\n\n/* Image dynamic colors inversion */\n\n.theme-dark .image-embed[src$=\"#invert_B\"] img {\n  filter: invert(1) hue-rotate(180deg);\n}\n\n.theme-dark .image-embed[src$=\"#invert_W\"] img {\n  filter: invert(1) hue-rotate(180deg);\n}\n\n.theme-dark .image-embed[src$=\"invert_B_C\"] img {\n  filter: invert(1) hue-rotate(180deg) contrast(1.5);\n}\n\n.theme-dark .image-embed[src$=\"#invert_W_C\"] img {\n  filter: invert(1) hue-rotate(180deg) contrast(1.45);\n}\n```","lastmodified":"2022-12-29T22:08:00.939376594Z","tags":null},"/notes/math/discrete-math/combinatorics/Basic-Counting-Principles":{"title":"Basic Counting Principles","content":"\n## The Product rule\n\nSuppose that a procedure can be broken down into a sequence of two tasks. If there are $n_1$ ways to do the first task and for each of these ways of doing the first task, there are $n_2$ ways to do the second task, then there are $n_1 \\cdot n_2$ ways to do the procedure.\n\n## The Sum Rule\n\nIf a task can be done either in one of $n_1$ ways or in one of $n_2$ ways, where none of the set of $n_1$ ways is the same as any of the set of $n_2$ ways, then there are $n_1+n_2$ ways to do the task.\n\n## The Subtraction Rule / Principle of inclusion‚Äìexclusion\n\nIf a task can be done in either $n_1$ ways or $n_2$ ways, then the number of ways to do the task is $n_1$ + $n_2$ minus the number of ways to do the task that are common to the two different ways.\n\n## The Division Rule\n\nThere are $\\frac{n}{d}$ ways to do a task if it can be done using a procedure that can be carried out in $n$ ways, and for every way $w$, exactly $d$ of the $n$ ways correspond to way $w$.\n\n## The Pigeonhole Principle\n\nIf $k$ is a positive integer and $k + 1$ or more objects are placed into $k$ boxes, then there is at least one box containing two or more of the objects.\n\n\n## The Generalized Pigeonhole Principle\n\nIf $N$ objects are placed into $k$ boxes, then there is at least one box containing at least $\\lceil \n\\frac{N}{k} \\rceil$ objects.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/combinatorics/Combination":{"title":"Combination","content":"\nThe combination is selection of elements without repetition from a collection **when order doesn't matter**.\n\n\nWithout repetition:\n\n$$\nC(n, r) = \\frac{n!}{r!\\cdot(n-r)!}\n$$\n\nAlso:\n$$C(n, r) = C(n, n ‚àí r)$$\n\nWith repetition:\n\n$$\nC(n, r) = \\frac{(r+n-1)!}{r!\\cdot(n-1)!}\n$$\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/combinatorics/Permutations":{"title":"Permutations","content":"A permutation is a mathematical technique that determines the number of possible arrangements in a set **when the order\nof the arrangements matters**.\n\nWith repetition:\n\n$$ P = n^r $$\n\nWithout repetition, using all elements:\n$$ P = n!\n$$ $n!$ is the notation of n [[notes/math/discrete-math/number-theory/Factorial|factorial]].\n\nWithout repetition, using *some* ($r$) elements:\n\n$$ P(n, r) = n! \\cdot (n-r)! = \\frac{n!}{(n-r)!} $$\n\n\n\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Acyclic-Graph":{"title":"Acyclic Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] that has no [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Adjacency-Graph":{"title":"Adjacency (Graph)","content":"Two distinct [[notes/math/discrete-math/graph-theory/Incidence (Graph)|incidences]] $(u, e)$ and $(v, f)$ are **adjacent** if either the vertices $u, v$ or the edges $e, f$ are adjacent, which is the case if one of the following holds:\n\n- $u = v$ and $e \\neq f$\n- $e = f$ and $u \\neq v$, or\n- $e = \\{u, v\\}, f = \\{v, w\\}$, and $u \\neq w$\n\nIn simpler terms:\n- two vertices that are connected by an edge are *adjacent*\n- two edges that share a vertex are *adjacent*\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Adjacency-Matrix":{"title":"Adjacency Matrix","content":"An **adjacency matrix** is a square matrix used to represent a finite [[notes/math/discrete-math/graph-theory/Graph|graph]]. The elements of the [[notes/Mathematics/Linear Algebra/Matrix|matrix]] indicate whether pairs of [[notes/math/discrete-math/graph-theory/Vertex|vertices]] are [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent]] or not in the graph.\n\nIf the graph is [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected]] the adjacency matrix is symmetric.\n\nExample of an undirected graph and its adjecancy matrix:\n\n![adjacency graph](notes/assets/adjacency-graph.svg#invert_B_C|200)\n$$ \n\\begin{bmatrix}\n1\u00261\u00260\u00260\u00261\u00260\\\\\n1\u00260\u00261\u00260\u00261\u00260\\\\\n0\u00261\u00260\u00261\u00260\u00260\\\\\n0\u00260\u00261\u00260\u00261\u00261\\\\\n1\u00261\u00260\u00261\u00260\u00260\\\\\n0\u00260\u00260\u00261\u00260\u00260\n\\end{bmatrix}\n$$\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Bipartite-Graph":{"title":"Bipartite Graph","content":"*–¥–≤—É–¥–µ–ª–µ–Ω –≥—Ä–∞—Ñ, bigraph*\n\nA **bipartite graph** is a [[notes/math/discrete-math/graph-theory/Graph|graph]] whose vertices can be divided into two [[notes/math/discrete-math/set-theory/Disjoint sets|disjoint]] and independent sets $U$ and $V$, that is every [[notes/math/discrete-math/graph-theory/Edge|edge]] connectes a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $U$ to one in $V$.\n\nA bipartite graph is a graph that doesn't contain any odd-length [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]].\n\nIf the set of edges of bipartite graph contains all vertices from $X$ and all vertices from $Y$ it is called *complete bipartite graph*.\n\n$$\n\\begin{align}\nV = X \\cup Y \\\\\nE = \\{xy | x \\in X, y \\in Y \\}\n\\end{align}\n$$\nIf $|X| = m$ and $|Y| = n$ then the complete bipartite graph is denoted by $K_{n,m}$.\n\n$K_{n,m}$ contains $m+n$ vertices and $m \\times n$ edges.\n\nA graph $G$ is bipartite iff all of its [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]] are of even length.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Bridge":{"title":"Bridge","content":"*–º–æ—Å—Ç, cut-edge, cut-arc*\n\n**Bridge** is an [[notes/math/discrete-math/graph-theory/Edge|edge]] of a [[notes/math/discrete-math/graph-theory/Graph|graph]] whose deletion increases the graph's number of connected [[notes/math/discrete-math/graph-theory/Components|components]].\n\nEquivalently, an edge is a **bridge** if and only if it is not contained in any [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycle]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Center-Graph":{"title":"Center (Graph)","content":"The [[notes/math/discrete-math/set-theory/Set|set]] of all [[notes/math/discrete-math/graph-theory/Central Vertex|central vertices]] is called the **center** of a [[notes/math/discrete-math/graph-theory/Graph|graph]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Central-Vertex":{"title":"Central Vertex","content":"If the [[notes/math/discrete-math/graph-theory/Eccentricity (Vertex)|eccentricity]] of a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] $v$ in [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ equals the [[notes/math/discrete-math/graph-theory/Radius (Graph)|radius]] of $G$, then the $v$ is a **central vertex** of $G$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Circuit-Graph":{"title":"Circuit (Graph)","content":"For the [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, and vertices $v$ and $w$, a **circuit** is a [[notes/math/discrete-math/graph-theory/Trail (Graph)|trail]] that contains at least one edge and starts and ends at the same [[notes/math/discrete-math/graph-theory/Vertex|vertex]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Complete-Graph":{"title":"Complete Graph","content":"A **complete graph** is a [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]] in which every pair of distinct [[notes/math/discrete-math/graph-theory/Vertex|vertices]] is connected by an unique [[notes/math/discrete-math/graph-theory/Edge|edge]].\n\nA **complete graph** is a [[notes/math/discrete-math/graph-theory/Directed Graph|directed graph]] in which every pair of distinct vertices is connected by a pair of unique edges (on in each direction).\n\nComplete graph can also be described as a graph in which every two vertices are neighbouring.\n\nComplete Graph with $n$ number of vertices is denoted by $K_n$.\n\nThe number of edges in a complete graph can be found using binomial coefficients:\n\n$$\n\\binom{n}{2}\n$$\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Components":{"title":"Components","content":"A **component** of an [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]] is a [[notes/math/discrete-math/graph-theory/Connected Graph|connected]] [[notes/math/discrete-math/graph-theory/Subgraph|subgraph]] that is not part of any larger connected subgraph.\n\nThe components of any graph partition its [[notes/math/discrete-math/graph-theory/Vertex|vertices]] into [[notes/math/discrete-math/set-theory/Disjoint sets|disjoint sets]], and are the [[notes/math/discrete-math/graph-theory/Induced Subgraph|induced subgraphs]] of those sets.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Connected-Graph":{"title":"Connected Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ is **connected** if and only if there is a [[notes/math/discrete-math/graph-theory/Walk (Graph)|walk]] between each pair of [[notes/math/discrete-math/graph-theory/Vertex|vertices]].\n\nThe opposite of a [[notes/math/discrete-math/graph-theory/Disconnected Graph]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Cut-Set":{"title":"Cut Set","content":"A **cut set** is a [[notes/math/discrete-math/graph-theory/Disconnecting Set|disconnecting set]] such that no [[notes/math/discrete-math/set-theory/Subset#^51fb8d|proper subset]] of that set is a disconnecting set.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Cut-Vertex":{"title":"Cut Vertex","content":"*—Ä–∞–∑–¥–µ–ª—è—â –≤—Ä—ä—Ö*\n\nA [[notes/math/discrete-math/graph-theory/Vertex|vertex]] whose deletion along with [[notes/math/discrete-math/graph-theory/Incidence (Graph)|incident]] [[notes/math/discrete-math/graph-theory/Edge|edges]] results in a [[notes/math/discrete-math/graph-theory/Graph|graph]] with more [[notes/math/discrete-math/graph-theory/Components|components]] than the original graph is called **cut vertex**.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Cycle-Graph":{"title":"Cycle (Graph)","content":"A **cycle** in a [[notes/math/discrete-math/graph-theory/Graph|graph]] is a non-empty [[notes/math/discrete-math/graph-theory/Circuit (Graph)|circuit]] in which only the first and last [[notes/math/discrete-math/graph-theory/Vertex|vertices]] are equal. \n\n**Cycle** with length $n$ is denoted by $C_n$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Degree-Graph":{"title":"Degree (Graph)","content":"The total degree of a [[notes/math/discrete-math/graph-theory/Graph|graph]] is the sum of the [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]]  of its [[notes/math/discrete-math/graph-theory/Vertex|vertices]]. The number can be found using the [[notes/math/discrete-math/graph-theory/Handshaking lemma]].\n\nThe [[notes/math/discrete-math/graph-theory/Handshaking lemma]] also implies that\n- the total degree of a graph is always an [[notes/math/discrete-math/number-theory/Parity#^2338e6|even]] number \n- there are an [[notes/math/discrete-math/number-theory/Parity#^2338e6|even]] number of [[notes/math/discrete-math/graph-theory/Vertex|vertices]] of odd degree\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Degree-Vertex":{"title":"Degree (Vertex)","content":"The **degree** of a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] is the number of [[notes/math/discrete-math/graph-theory/Edge|edge]] with that vertex as an endpoint and is denoted by $deg(x)$ or $d(x)$.\n\nA vertex with $d(x) = 1$ is called an \"end vertex\".\n\nA vertex with $d(x) = 0$ is called an \"isolated vertex\".\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Diameter-Graph":{"title":"Diameter (Graph)","content":"The **diameter** of [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ is the maximum [[notes/math/discrete-math/graph-theory/Eccentricity (Vertex)|eccentricity]] of any [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $G$.\n\nThe diameter of a [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnected graph]] equals $+\\infty$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Dijkstras-Algorithm":{"title":"Dijkstra's Algorithm","content":"**Dijkstra's Aglorithm** is used to find the shortest path between two [[notes/math/discrete-math/graph-theory/Vertex|vertices]] (nodes) in a [[notes/math/discrete-math/graph-theory/Weighted Graph|weighted graph]].\n\n![animated dijkstra algorithm](/notes/assets/dijkstra-algorithm.gif#invert_B)\n## Steps\n\nLet the node at which we are starting be called the¬†**initial node**. Let the¬†**distance of node¬†_Y_**¬†be the distance from the¬†**initial node**¬†to¬†_Y_. Dijkstra's algorithm will initially start with infinite distances and will try to improve them step by step.\n\n1.  Mark all nodes unvisited. Create a [[notes/math/discrete-math/set-theory/Set|set]]¬†of all the unvisited nodes called the¬†_unvisited set_.\n2.  Assign to every node a¬†_tentative distance_¬†value: set it to zero for our initial node and to infinity for all other nodes. During the run of the algorithm, the tentative distance of a node¬†$v$¬†is the length of the shortest path discovered so far between the node¬†$v$¬†and the¬†_starting_¬†node. Since initially no path is known to any other vertex than the source itself (which is a path of length zero), all other tentative distances are initially set to infinity. Set the initial node as current.\n3.  For the current node, consider all of its unvisited neighbors and calculate their tentative distances through the current node. Compare the newly calculated tentative distance to the one currently assigned to the neighbor and assign it the smaller one. For example, if the current node¬†$A$¬†is marked with a distance of 6, and the edge connecting it with a neighbor¬†$B$¬†has length 2, then the distance to¬†$B$¬†through¬†$A$¬†will be 6 + 2 = 8. If $B$ was previously marked with a distance greater than 8 then change it to 8. Otherwise, the current value will be kept.\n4.  When we are done considering all of the unvisited neighbors of the current node, mark the current node as visited and remove it from the unvisited set. A visited node will never be checked again (this is valid and optimal in connection with the behavior in step 6.: that the next nodes to visit will always be in the order of 'smallest distance from¬†_initial node_¬†first' so any visits after would have a greater distance).\n5.  If the destination node has been marked visited (when planning a route between two specific nodes) or if the smallest tentative distance among the nodes in the unvisited set is infinity (when planning a complete traversal; occurs when there is no connection between the initial node and remaining unvisited nodes), then stop. The algorithm has finished.\n6.  Otherwise, select the unvisited node that is marked with the smallest tentative distance, set it as the new¬†_current node_, and go back to step 3.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Directed-Graph":{"title":"Directed Graph","content":"A **directed graph** is a [[notes/math/discrete-math/graph-theory/Graph|graph]] in which the edges are [[notes/math/discrete-math/set-theory/Ordered Pairs|ordered pairs]] of vertices.\n\nThe edge connecting $a$ and $b$ is denoted by $\\overrightarrow{ab}$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Disconnected-Graph":{"title":"Disconnected Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ is **disconnected** if there exists two [[notes/math/discrete-math/graph-theory/Vertex|vertices]] in $G$ such that no [[notes/math/discrete-math/graph-theory/Edge|edge]] in $G$ has these vertices as [[notes/math/discrete-math/graph-theory/Endpoint|endpoint]].\n\nThe opposite of a [[notes/math/discrete-math/graph-theory/Connected Graph]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Disconnecting-Set":{"title":"Disconnecting Set","content":"A [[notes/math/discrete-math/set-theory/Set|set]] of [[notes/math/discrete-math/graph-theory/Edge|edges]] in a [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ whose removal [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnects]] $G$. A graph can have multiple **disconnecting sets**.\n\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Eccentricity-Vertex":{"title":"Eccentricity (Vertex)","content":"The eccentricity of a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] $v$ in a [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, denoted $ecc(v)$, is the [[notes/math/discrete-math/graph-theory/Walk (Graph)|distance]] from $v$ to vertex farther from $v$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Edge":{"title":"Edge","content":"An **edge** is (together with [[notes/math/discrete-math/graph-theory/Vertex|vertices]]) one of the two basic units out of which [[notes/math/discrete-math/graph-theory/Graph|graphs]] are constructed. Each **edge** has two (or in [[notes/math/discrete-math/graph-theory/Hypergraph|hypergraphs]], more) vertices to which it is attached, called its [[notes/math/discrete-math/graph-theory/Endpoint|endpoints]]. \n\n**Edges** may be:\n- undirected edges (also called lines)\n- directed edges (also called arcs or arrows)\n\nIn an [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected simple graph]], an edge may be represented as the set of its vertices, and in a [[notes/math/discrete-math/graph-theory/Directed Graph| directed simple graph]] it may be represented as an ordered pair of its vertices. \n\nAn **edge** that connects vertices $x$ and $y$ is sometimes written $xy$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Edge-Connectivity":{"title":"Edge Connectivity","content":"*line connectivity*\n\nThe **edge connectivity** of a [[notes/math/discrete-math/graph-theory/Graph|graph]] is the minimum number of [[notes/math/discrete-math/graph-theory/Edge|edges]] whose deletion from a graph separate the remaining nodes into two or more [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnected graphs]], denoted by: $\\lambda{G}$.\n\n\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Endpoint":{"title":"Endpoint","content":"The two [[notes/math/discrete-math/graph-theory/Vertex|vertices]] forming an [[notes/math/discrete-math/graph-theory/Edge|edge]] are said to be the¬†**endpoints**¬†of this edge, and the edge is said to be [[notes/math/discrete-math/graph-theory/Incidence Matrix|incidence]] to the vertices.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Euler-Circuit":{"title":"Euler Circuit","content":"An **Euler Circuit** is an [[notes/math/discrete-math/graph-theory/Euler Trail|Euler Trail]] that visits every [[notes/math/discrete-math/graph-theory/Edge|edge]] exactly once and starts and ends at the same [[notes/math/discrete-math/graph-theory/Vertex|vertex]].\n\nA **Euler Circuit** exists in a [[notes/math/discrete-math/graph-theory/Connected Graph|connected graph]] iff every [[notes/math/discrete-math/graph-theory/Vertex|vertex]] has an even [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Euler-Trail":{"title":"Euler Trail","content":"An **Euler Trail** is a [[notes/math/discrete-math/graph-theory/Trail (Graph)|trail]] that visits every [[notes/math/discrete-math/graph-theory/Edge|edge]] exactly once.\n\nA **Euler Trail** exists in a [[notes/math/discrete-math/graph-theory/Graph|graph]] iff there are only two [[notes/math/discrete-math/graph-theory/Vertex|vertices]] of odd [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]].\n\nIf a [[notes/math/discrete-math/graph-theory/Graph|graph]] has more than 2 [[notes/math/discrete-math/graph-theory/Vertex|vertices]] of odd [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]] then it has **no Eulerian trail**.\n\nTo find an Euler trail in a graph using [[notes/math/discrete-math/graph-theory/Fleury's Algorithm|Fleury‚Äôs Algorithm]], start from an **odd** degree vertex and finish on an **odd** degree vertex.","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Eulerian-Graph":{"title":"Eulerian Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] $G = (V, E)$ is an **Eulerian Graph** if it contains a [[notes/math/discrete-math/graph-theory/Euler Circuit|Euler Circuit]].\n\nA [[notes/math/discrete-math/graph-theory/Connected Graph|connected graph]] $G$ is **Eulerian Graph** iff the [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]] of each [[notes/math/discrete-math/graph-theory/Vertex|vertex]] is an even number.\n\n![an eulerian graph diagram](notes/assets/euler-graph.png#invert_B)\n\n\nAn [[notes/math/discrete-math/graph-theory/Oriented Graph|oriented graph]] is Eulerian iff $d^+(v) = ^-(v)$ for all vertices and the undirected graph it is derived from has only one [[notes/math/discrete-math/graph-theory/Components|component]].","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Fleurys-Algorithm":{"title":"Fleury's Algorithm","content":"**Fleury's Algorithm** is used to find [[notes/math/discrete-math/graph-theory/Euler Circuit|Euler circuits]] or [[notes/math/discrete-math/graph-theory/Euler Trail|Euler trails]].\n\nConsider a graph known to have all edges in the same component and at most two vertices of odd degree. \n\nThe algorithm starts at a vertex of odd degree, or, if the graph has none, it starts with an arbitrarily chosen vertex. At each step it chooses the next edge in the path to be one whose deletion would not disconnect the graph, unless there is no such edge, in which case it picks the remaining edge left at the current vertex. It then moves to the other endpoint of that edge and deletes the edge. At the end of the algorithm there are no edges left, and the sequence from which the edges were chosen forms an Eulerian cycle if the graph has no vertices of odd degree, or an Eulerian trail if there are exactly two vertices of odd degree.","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Forest":{"title":"Forest","content":"A **forest** is an [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]] in which any two [[notes/math/discrete-math/graph-theory/Vertex|vertices]] are connected by at most one [[notes/math/discrete-math/graph-theory/Path (Graphs)|path]].\n\nEquivalently, a **forest** is an [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]] with no [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]], all of whose [[notes/math/discrete-math/graph-theory/Components|connected components]] are [[notes/math/discrete-math/graph-theory/Tree (Graph)|trees]]; in other words, the graph consists of a disjoint union of *trees*.\n\n**Theorem:** A [[notes/math/discrete-math/graph-theory/Graph|graph]] is a [[notes/math/discrete-math/graph-theory/Forest|forest]] if and only if each pair of distinct [[notes/math/discrete-math/graph-theory/Edge|edges]] $\\{x, y\\}$ there's only one [[notes/math/discrete-math/graph-theory/Path (Graphs)|path]] from $x$ to $y$.\n\n**Theorem:** A **forest** with $n$ vertices and $k$ component has $n-k$ edges.\n\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Graph":{"title":"Graph","content":"A **graph** $G$ consists of two [[notes/math/discrete-math/set-theory/Finite set|finite sets]]: \n- a nonempty set $V(G)$ of **vertices**\n- a set $E(G)$ of **edges**,\n\nwhere each edge is associated with a set consisting of either one or two vertices called its **endpoints**.\n\n![Diagram of a Graph](notes/assets/graph.png#invert_B)\n\n\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Graph-Isomorphism":{"title":"Graph Isomorphism","content":"An **isomorphism** of [[notes/math/discrete-math/graph-theory/Graph|graphs]] $G$ and $H$ is a [[notes/math/discrete-math/set-theory/Bijective Function|bijection]]  between the [[notes/math/discrete-math/graph-theory/Vertex|vertex]] [[notes/math/discrete-math/set-theory/Set|sets]] of $G$ and $H$\n$$\nf: V(G) \\longrightarrow V(H)\n$$\n\nsuch that any two vertices $u$ and $v$ of $G$ are [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent]] in $G$ iff $f(u)$ and $f(v)$ are adjacent in $H$. \n\nThis kind of bijection is commonly described as \"edge-perserving bijection\".\n\nIf an isomorphism exists between two graphs, then the graphs are called **isomorphic** and denoted as $G \\simeq H$.\n\nIn case when the bijection is a maping of a graph onto itself, i.e. when $G$ and $H$ are one and the same graph, the bijection is called an **automorphism** of $G$.\n\nGraph isomorphism is an [[notes/math/discrete-math/set-theory/Equivalence Relation|equivalence relation]] on graphs and as such it partitions the [[notes/math/discrete-math/set-theory/Class (Set Theory)|class]] of all graphs into equivalance classes.\n\n![graph isomorphism diagram](notes/assets/graph-isomorphism.png#invert_B_C)\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Hamiltonian-Circuit":{"title":"Hamiltonian Circuit","content":"A **Hamiltonian Circuit** in a graph $G$ is a [[notes/math/discrete-math/graph-theory/Circuit (Graph)|circuit]] that contains each [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $G$ exactly once, except for the starting and ending vertex that **appears twice**.\n\nRemoving any edge from a **Hamiltonian circuit** produces a [[notes/math/discrete-math/graph-theory/Hamiltonian Path|Hamiltonian path]].","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Hamiltonian-Graph":{"title":"Hamiltonian Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] that has a [[notes/math/discrete-math/graph-theory/Hamiltonian Circuit|Hamiltonian Circuit]].\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Hamiltonian-Path":{"title":"Hamiltonian Path","content":"A **Hamiltonian Path** in a graph $G$ is a [[notes/math/discrete-math/graph-theory/Path (Graphs)|path]] that contains each [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $G$ exactly once. If it ends at the vertex it started at it is a [[notes/math/discrete-math/graph-theory/Hamiltonian Circuit|Hamiltonian Circuit]].\n\nA **Hamiltonian path** that starts and ends at [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent]] vertices can be completed by adding one more [[notes/math/discrete-math/graph-theory/Edge|edge]] to form a Hamiltonian Circuit.","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Handshaking-lemma":{"title":"Handshaking lemma","content":"/a.k.a. the Degree Sum Formula/\n\n\n$$\n\\sum_{x \\in V}{d(x)} = 2 |E|\n$$\nThis formula implies that in any [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]], the number of vertices with odd [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]] is even.\n\n$$\n\\sum_{x \\in V}{d^+(x)}= \\sum_{x \\in V}{d^-(x)}\n$$\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Hypergraph":{"title":"Hypergraph","content":"","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Incidence-Graph":{"title":"Incidence (Graph)","content":"A [[notes/math/discrete-math/graph-theory/Vertex|vertex]] is **incident** with an [[notes/math/discrete-math/graph-theory/Edge|edge]] if the vertex is one of the two vertices the edge connects. \n\nAn incidence is a pair $(u, e)$ where $u$ is a vertex and $e$ is an edge incident with $u$.\n","lastmodified":"2022-12-29T22:08:00.943376658Z","tags":null},"/notes/math/discrete-math/graph-theory/Incidence-Matrix":{"title":"Incidence Matrix","content":"An **incidence matrix** is a [[notes/Mathematics/Linear Algebra/Matrix|matrix]] that shows the relationship between two classes of objects, usually called an *incidence relation*. If the first class is $X$ and the second is $Y$, the matrix has one row for each element in $X$ and one column for each element of $Y$. The entry in row $x$ and column $y$ is $1$ if $x$ and $y$ are [[notes/math/discrete-math/graph-theory/Incidence (Graph)|incident]] and $0$ if they are not.\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Indegree-Vertex":{"title":"Indegree (Vertex)","content":"For a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in a [[notes/math/discrete-math/graph-theory/Directed Graph|directed graph]] the number of head ends [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent]] to a vertex is called the **indegree**, denoted by $d^+(x)$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Induced-Subgraph":{"title":"Induced Subgraph","content":"/–∏–Ω–¥—É—Ü–∏—Ä–∞–Ω –ø–æ–¥–≥—Ä–∞—Ñ/\n\nAn **induced [[notes/math/discrete-math/graph-theory/Subgraph|subgraph]]** of a [[notes/math/discrete-math/graph-theory/Graph|graph]] is another graph, formed from a [[notes/math/discrete-math/set-theory/Subset|subset]] of the [[notes/math/discrete-math/graph-theory/Vertex|vertices]] of the graph and **all** of the edges (from the original graph) connecting pairs of vertices in that subset.\n\nEvery graph is an induced subgraph of itself.\n\n![an induced graph diagram](notes/assets/induced-subgraph.png#invert_B_C)\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Maximum-Degree-Graph":{"title":"Maximum Degree (Graph)","content":"The **maximum degree** of a [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, denoted by $\\Delta G$, is the maximum of its vertices' [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degrees]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Minimum-Degree-Graph":{"title":"Minimum Degree (Graph)","content":"The **minimum degree** of a [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, denoted by $\\delta G$, is the minimum of its vertices' [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degrees]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Ores-Theorem":{"title":"Ore's Theorem","content":"If a simple [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ with $n \\geq 3$  [[notes/math/discrete-math/graph-theory/Vertex|vertices]], and if $deg(v) + deg(w) \\geq n$ for each pair of non-adjacent vertices $v$ and $w$, then $G$ is [[notes/math/discrete-math/graph-theory/Hamiltonian Graph|Hamiltonian]].\n\nIf any of the conditions in **Ore's Theorem** are not satisfied, it doesn't mean that the graph $G$ is not Hamiltonian.","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Oriented-Graph":{"title":"Oriented Graph","content":"A [[notes/math/discrete-math/graph-theory/Directed Graph|directed graph]] formed by giving an orientation to every [[notes/math/discrete-math/graph-theory/Edge|edge]] $ab$ in an [[notes/math/discrete-math/graph-theory/Undirected Graph|undirected graph]], such that it has at most one of the edges $\\overrightarrow{ab}$ or $\\overrightarrow{ba}$.\n\nOriented graphs have no [[notes/math/discrete-math/graph-theory/Cycle (Graph)|2-cycles]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Outdegree-Vertex":{"title":"Outdegree (Vertex)","content":"For a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in a [[notes/math/discrete-math/graph-theory/Directed Graph|directed graph]], the number of tail ends [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent]] to a vertex is called the **outdegree**, denoted by $d^-(x)$.\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Path-Graphs":{"title":"Path (Graphs)","content":"*–ø—ä—Ç*\n\nFor the [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, and vertices $v$ and $w$, a **path** from $v$ to $w$ is a trail that does not contain \na repated [[notes/math/discrete-math/graph-theory/Vertex|vertex]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Peripheral-Vertex":{"title":"Peripheral Vertex","content":"If the [[notes/math/discrete-math/graph-theory/Eccentricity (Vertex)|eccentricity]] of a [[notes/math/discrete-math/graph-theory/Vertex|vertex]] $v$ in [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ equals the [[notes/math/discrete-math/graph-theory/Diameter (Graph)|diameter]] of $G$, then the $v$ is a **peripheral vertex** of $G$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Periphery-Graph":{"title":"Periphery (Graph)","content":"The [[notes/math/discrete-math/set-theory/Set|set]] of all [[notes/math/discrete-math/graph-theory/Peripheral Vertex|peripheral vertices]] is called the **periphery** of a [[notes/math/discrete-math/graph-theory/Graph|graph]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Radius-Graph":{"title":"Radius (Graph)","content":"The **radius** of a graph $G$ is the minimum [[notes/math/discrete-math/graph-theory/Eccentricity (Vertex)|eccentricity]] of any [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $G$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Regular-Graph":{"title":"Regular Graph","content":"A **regular graph** is a [[notes/math/discrete-math/graph-theory/Graph|graph]] where each vertex has the same number of neighbors; i.e. every vertex has the same [[notes/math/discrete-math/graph-theory/Degree (Vertex)|degree]].\n\nRegular graphs with vertices of degree $k$ are called $k$-regular graph or regular graph of degree $k$. Also, from the [[notes/math/discrete-math/graph-theory/Handshaking lemma|handshaking lemma]], a regular graph contains an even number of vertices with odd degree.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Semi-Eulerian-Graph":{"title":"Semi Eulerian Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] $G = (V, E)$ is a **Semi Eulerian Graph** if it contains a [[notes/math/discrete-math/graph-theory/Euler Trail|Euler trail]], but does not contain an [[notes/math/discrete-math/graph-theory/Euler Circuit|Euler circuit]].\n\n![a semi-eulerian graph diagram](notes/assets/semi-euler-graph.png#invert_B)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Semi-Hamiltonian-Graph":{"title":"Semi Hamiltonian Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] that has a [[notes/math/discrete-math/graph-theory/Hamiltonian Path|Hamiltonian Path]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Separating-Set":{"title":"Separating Set","content":"A **separating set** of a [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$ is a [[notes/math/discrete-math/set-theory/Set|set]] of [[notes/math/discrete-math/graph-theory/Vertex|vertices]] whose deletion [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnects]] $G$. A graph can have multiple **separating sets**.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Spanning-Subgraph":{"title":"Spanning Subgraph","content":"A **spanning [[notes/math/discrete-math/graph-theory/Subgraph|subgraph]]** is a subgraph that contains all the [[notes/math/discrete-math/graph-theory/Vertex|vertices]] of the original [[notes/math/discrete-math/graph-theory/Graph|graph]].\n\n![a spanning subgraph diagram](notes/assets/spanning-subgraph.png#invert_B_C)\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Subgraph":{"title":"Subgraph","content":"[[notes/math/discrete-math/graph-theory/Graph|Graph]] $H$ is said to be a **subgraph** of a graph $G$ if, and only if, every [[notes/math/discrete-math/graph-theory/Vertex|vertex]] in $H$ is also a vertexin $G$, every [[notes/math/discrete-math/graph-theory/Edge|edge]] in $H$ is also an edge in $G$, and every edge in $H$ has the same endpoints as it has in $G$.\n\n![subgraph diagram](notes/assets/subgraph.png#invert_B_C)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Theorems-Graphs":{"title":"Theorems (Graphs)","content":"\n\u003e [[notes/math/discrete-math/graph-theory/Handshaking lemma|The handshaking lemma]]\n\n-----\n\n\u003e The set of all [[notes/math/discrete-math/graph-theory/Edge|edges]] of a [[notes/math/discrete-math/graph-theory/Graph|graph]] can be [[notes/math/discrete-math/set-theory/Partition of a set|partitioned]] into [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]] iff every vertex is of even¬†[degree](app://obsidian.md/Degree%20(Graph)).\n\n------\n\n\u003e A graph is¬†[bipartite graph](app://obsidian.md/bipartite%20graph)¬†iff each of his¬†[cycles](app://obsidian.md/Cycle%20(Graph))¬†are of even length.\n\n-----\n\nA [[notes/math/discrete-math/graph-theory/Graph|graph]] is a [[notes/math/discrete-math/graph-theory/Forest|forest]] if and only if each pair of distinct [[notes/math/discrete-math/graph-theory/Edge|edges]] $\\{x, y\\}$ there's only one [[notes/math/discrete-math/graph-theory/Path (Graphs)|path]] from $x$ to $y$.\n\n--------\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Tournament":{"title":"Tournament","content":"A tournament is a [[notes/math/discrete-math/graph-theory/Directed Graph|directed graph]] obtained by assigning a *direction* for each [[notes/math/discrete-math/graph-theory/Edge|edge]] in an [[notes/math/discrete-math/graph-theory/Complete Graph|undirected complete graph]]. \n\nIn every **tournament** there's a [[notes/math/discrete-math/graph-theory/Hamiltonian Path|Hamiltonian path]].\n\nEvery strongly connected [^1] tournament has a [[notes/math/discrete-math/graph-theory/Hamiltonian Circuit|Hamiltonian cycle]].\n\n\n[^1]: **strongly connected:** a graph is said to be strongly connected if every vertex is *reachable* from every other vertex ","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Trail-Graph":{"title":"Trail (Graph)","content":"*–≤–µ—Ä–∏–≥–∞*\n\nFor the [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, and vertices $v$ and $w$, a **trail** from $v$ to $w$ is a [[notes/math/discrete-math/graph-theory/Walk (Graph)|walk]] from $v$ to $w$ that does not contain a repeated [[notes/math/discrete-math/graph-theory/Edge|edge]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Tree-Graph":{"title":"Tree (Graph)","content":"If $G$ is a [[notes/math/discrete-math/graph-theory/Graph|graph]] with $n$ [[notes/math/discrete-math/graph-theory/Vertex|vertices]]:\n\n-----\n\n\u003e $G$ is a [[notes/math/discrete-math/graph-theory/Connected Graph|connected graph]] with no [[notes/math/discrete-math/graph-theory/Cycle (Graph)|cycles]] (acyclic)\n\n--------\n\n\u003e $G$ is a [[notes/math/discrete-math/graph-theory/Connected Graph|connected graph]] with $n - 1$ [[notes/math/discrete-math/graph-theory/Edge|edges]]\n\n-------\n\n\u003e $G$ is [[notes/math/discrete-math/graph-theory/Acyclic Graph|acyclic]] [[notes/math/discrete-math/graph-theory/Graph|graph]] with $n - 1$ [[notes/math/discrete-math/graph-theory/Edge|edges]].\n\n------\n\n\u003e $G$ is [[notes/math/discrete-math/graph-theory/Connected Graph|connected]], but removing an [[notes/math/discrete-math/graph-theory/Edge|edge]] [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnects]] $G$\n\n--------\n\n\u003e $G$ is [[notes/math/discrete-math/graph-theory/Acyclic Graph|acyclic]] [[notes/math/discrete-math/graph-theory/Graph|graph]], but adding an [[notes/math/discrete-math/graph-theory/Edge|edge]] that connects any two not incident [[notes/math/discrete-math/graph-theory/Vertex|vertices]] makes $G$ cyclic.\n\n---------\n\n\u003e For all pairs of [[notes/math/discrete-math/graph-theory/Vertex|vertices]] $x, y$ exists only one [[notes/math/discrete-math/graph-theory/Path (Graphs)|path]]  in $G$ with [[notes/math/discrete-math/graph-theory/Endpoint|endpoints]] $x$ and $y$.\n\n-------\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Undirected-Graph":{"title":"Undirected Graph","content":"An **undirected graph** is a [[notes/math/discrete-math/graph-theory/Graph|graph]], i. e., set of objects (called [[notes/math/discrete-math/graph-theory/Vertex|vertices]] or nodes) that are connected together, where all the edges are bidirectional.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Vertex":{"title":"Vertex","content":"*(aka node, –≤—ä—Ä—Ö)*\n\n**Vertices** are treated as featureless and indivisible objects.\n\n![a diagram of a small network graph](notes/assets/Small_Network.png#invert_B)\n\n\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Vertex-Connectivity":{"title":"Vertex Connectivity","content":"The vertex connectivity is the smallest number of [[notes/math/discrete-math/graph-theory/Vertex|vertices]] whose deletion causes a [[notes/math/discrete-math/graph-theory/Connected Graph|connected graph]] to be [[notes/math/discrete-math/graph-theory/Disconnected Graph|disconnected]], denoted by $K(G)$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Walk-Graph":{"title":"Walk (Graph)","content":"*–º–∞—Ä—à—Ä—É—Ç*\n\nFor the [[notes/math/discrete-math/graph-theory/Graph|graph]] $G$, and vertices $v$ and $w$, a **walk** from $v$ to $w$ is a finite alternating sequence of [[notes/math/discrete-math/graph-theory/Adjacency (Graph)|adjacent vertices and edges]]  of $G$.\n\nThe **length of a walk** is the number of [[notes/math/discrete-math/graph-theory/Edge|edges]] in a walk.\n\nWalks that start and end at different vertices are called *open walks*.\n\nWalks that start and end at the same vertex are called *closed walks*.\n\n## Types\n\n| properties | $v_o \\neq v_k$ | $v_o = v_k$ |\n|-----------|---------|-------|\n| repeats edges | [[notes/math/discrete-math/graph-theory/Walk (Graph)\\|walk (–º–∞—Ä—à—Ä—É—Ç)]] | [[notes/math/discrete-math/graph-theory/Walk (Graph) \\|closed walk (–∑–∞—Ç–≤–æ—Ä–µ–Ω –º–∞—Ä—à—Ä—É—Ç)]]|\n| repeated vertices | [[notes/math/discrete-math/graph-theory/Trail (Graph)\\|trail (–≤–µ—Ä–∏–≥–∞)]] | closed trail / curcuit (–∑–∞—Ç–≤–æ—Ä–µ–Ω–∞ –≤–µ—Ä–∏–≥–∞) \n| no repeated edges / vertices | [[notes/math/discrete-math/graph-theory/Path (Graphs) \\| path (–ø—ä—Ç)]] | [[notes/math/discrete-math/graph-theory/Cycle (Graph)\\|cycle (—Ü–∏–∫—ä–ª)]]  \n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/graph-theory/Weighted-Graph":{"title":"Weighted Graph","content":"A [[notes/math/discrete-math/graph-theory/Graph|graph]] whose [[notes/math/discrete-math/graph-theory/Edge|edge]] have a \"*weight*\" or \"*cost*\". The weight of an edge can represent distance, time, or anything that models the \"connection\" between the pair of nodes it connects.","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Almost-primes":{"title":"Almost primes","content":"**Almost Prime** is a natural number that has exactly $k$ [[notes/math/discrete-math/number-theory/Prime numbers|prime]] factors *(not necessarily distinct)*, where $k \\geq 1$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Amicable-number":{"title":"Amicable number","content":"**Amicable Numbers** are two numbers such that each is equal to the sum of all the natural proper [[notes/math/discrete-math/number-theory/Divisibility|divisor]] of the other, *including $1$*.\n\n$$\n\\begin{align}\n\u0026 220, 284 \u0026\u0026 \\\\ \\\\\n\u0026 D(284) = 1, 2, 4, 71 \\text{ and } 142 \u0026\u0026 \\\\\n\u0026 1 + 2 + 4 + 71 + 142 = 220 \u0026\u0026 \\\\ \\\\\n\u0026 D(220) = 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 \\text{ and } 110  \u0026\u0026 \\\\\n\u0026 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284 \u0026\u0026\n\n\\end{align}\n$$\n\nOther amicable numbers: \n\n$$(220, 284), (1184, 1210), (2620, 2924), (5020, 5564), (6232, 6368), (10744, 10856), (12285, 14595), ...$$\n\n## ThƒÅbit ibn Qurra theorem\n\nIf: \n- $p = 3 \\times 2^{n-1} - 1$\n- $q = 3 \\times 2^n -1$\n- $r = 9 \\times 2^{2n-1} - 1$\n\nSuch that $n$ is an integer $\u003e1$ and $p, q, r$ are prime numbers, then $2^n \\times p \\times q$ and $2^n \\times r$ are a pair of **amicable numbers**.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Bezouts-Identity":{"title":"BeÃÅzout's Identity","content":"**B√©zout's identity** for nonzero integers $a, b$, then there exists integers $x, y$ such that:\n$$\nax + by = gcd(a, b)\n$$\n\n$x \\text{ and } y$ are B√©zout coefficients. To find them use [[notes/math/discrete-math/number-theory/Extended Euclidean Algorithm]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Binary-Number-System":{"title":"Binary Number System","content":"## Binary to Decimal (unsigned)\n\n![binary to decimal conversion](notes/assets/binary2decimal.png#invert_B)\n\n\n-----\n\n## Decimal to Binary (unsigned)\n\n![decimal to binary conversion](notes/assets/decimal2binary.png#invert_B)\n\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Congruence":{"title":"Congruence","content":"/—Å—Ö–æ–¥—Å—Ç–≤–æ/\n\n**Congruence** $\\equiv$ two integers $a$, $b$ are congruent mod $n$ (positive integer) if $a - b$ is divisible by $n$.\n\n$$\n\\begin{align}\n\u0026 7 \\bmod 3 = 1 \u0026 13 \\bmod 8 = 5\u0026 \\\\\n\u0026 7 \\equiv 1 \\bmod 3 \u0026 13 \\equiv 5 \\bmod 8 \u0026 \\\\\n\u0026 7 - 1 = 6 \\text{ and } 3 | 6 \u0026 13 - 5 = 8 \\text{ and } 8 | 8 \u0026\n\\end{align}\n$$\n\n## Elementary properties of congruences\n\n### If $a \\equiv b \\bmod m$ and $c \\equiv d \\bmod m$, then $a+c \\equiv b+d \\bmod m$ and $m \u003e 0$.\n\n$$\n\\begin{align}\n\u0026 5 \\equiv 1 \\bmod 4 \\text{ and } 6 \\equiv 2 \\bmod 4 \u0026 \\\\\n\u00265 + 6 \\bmod 4 \\equiv 1 + 2 \\bmod 4 \u0026 \\\\\n\u002611 \\bmod 4 \\equiv 3 \\bmod 4 \u0026\n\\end{align}\n$$\n\n### If $a \\equiv b \\bmod m$, then $a \\cdot n \\equiv b \\cdot n \\bmod m$ for any $n \\in N$\n\n\n## Congruence as an [[notes/math/discrete-math/set-theory/Relations|Equivalence Relation]]\n\nR (congruences):\n- reflexive: $A \\equiv A \\bmod n$\n- symmetric: if $A \\equiv B \\bmod n$, then $B \\equiv A \\bmod n$\n- transitive: if $A \\equiv B \\bmod n$ and $B \\equiv C \\bmod n$ then $A \\equiv C \\bmod n$\n\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Congruence-Class":{"title":"Congruence Class","content":"**Congruence Class** $[a]_n$ is the set of all integers that are [[notes/math/discrete-math/number-theory/Congruence|congruent]] to $a \\bmod n$.\n\n$$\n[5]_8 = ..., -11, -3, 5, 13, 21,... \\equiv 5 \\bmod 8\n$$\n\n$$\n[1]_8 = ..., -15, -7, 1, 9, 17, ... \\equiv 1 \\bmod 8\n$$\n\n## Operations\n\n- **Addition** - $[a]_n + [b]_n = [a + b]_n$\n- **Subtraction**: $[a]_n - [b]_n = [a-b]_n$\n- **Multiplication**: $[a]_n * [b]_n = [a * b]_n$\n\n## Theorems\n\nA pair of congruence classes $[a]_n$ and $[b]_n$ are zero divisors if and only if both $[a]_n$ and $[b]_n$ are non-zero, but $[a]_n \\times [b]_n = [0]_n$.\n\nIf [[notes/math/discrete-math/number-theory/gcd|gcd]](a, n) $\u003e1$ then $[a]_n$ has (and is) a zero-divisor.\n\n------\n\nA pair of congruence classes $[a]_n$ and $[b]_n$ are **inverses** if and only if $[a]_n \\times [b]_n = [1]_n$. A congruence class with an inverse is called \"**invertible**\".\n\n$[a]_n$  is invertible if and only if $gcd(a,n) = 1$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Coprime-Integers":{"title":"Coprime Integers","content":"Two integers a and b are **coprime**, *relatively prime* or *mutually prime*, if the only positive integer that is a divisor of both of them is $1$. In other words if $a$ and $b$ are integers and they are coprimes if and only if [[notes/math/discrete-math/number-theory/gcd]]$(a, b) = 1$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Divisibility":{"title":"Divisibility","content":"An integer $N$ is divisible by another integer $M$ if there exists an integer $K$ such that $K \\cdot M = N$.\n\n**Example 1**.\n\n$$\n\\begin{align}\n\u0026 N = 10 \\quad M = 2 \\quad M | N \\\\\n\u0026 \\text{since there exists a } K = 5 \\text{ such that } 2 \\times 5 = 10\n\\end{align}\n$$\n\n**Example 2**.\n\n$$\n\\begin{align}\n\u0026 N = -88 \\quad M = 4 \\quad M | N \\\\\n\u0026 \\text{since there exists a } K = -22 \\text{ such that } 4 \\times -22 = -88\n\\end{align}\n$$\n\n**Example 3**.\n\n$$\n\\begin{align}\n2 \\not | 3\n\\text{, because there is no such integer } K \\text{ such that } K \\times 2 = 3\n\\end{align}\n$$\n\n## Properties\n\n### if $a | b$ and $b | c \\rightarrow a|c$\n\n$$\n\\begin{align}\n\u0026 a = 2 \\quad b = 4 \\quad c = 16\\\\\n\u0026 a|b = 2 | 4 = 2 \\text{ and } b | c = 4 | 16 = 4 \\rightarrow a|c = 2 | 16 = 8\n\\end{align}\n$$\n\n### if $a|b$ and $b|a \\rightarrow a = b \\text{ or } a = -b$\n\n$$\n\\begin{align}\n\u0026 a = 3 \\quad b = -3 \\\\\n\u0026 a|b = -1 \\quad b|a = -1\n\\end{align}\n$$\n\n### if $a|b \\rightarrow a | bc$\n\n$$\na = 3, b = 6 \\quad a|b = 3|6 = 2 \\quad a|bc = 3 | 18 = 6\n$$\n\n### if $a|b$ and $a|c \\rightarrow a | (b-c)$\n\n^9c52fd\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Divisibility-Rule":{"title":"Divisibility Rule","content":"## Divisibility by $1$\n\nNo special conditions. All integers are [[notes/math/discrete-math/number-theory/Divisibility|divisible]] by $1$\n\n## Divisibility by $2$\n\nFor an integer to be divisible by 2, **its last integer** has to be an even number.\n\n## Divisibility by $3$\n\nAn integer is divisible by $3$ if the sum of all its numbers is divisible by $3$.\n\n## Divisibility by $4$\n\nIf the last two digits are divisible by $4$ then the integer is divisible by $4$.\n\n## Divisibility by $5$\n\nIf the last digit is 0 or 5 then the integer is divisible by $5$.\n\n## Divisibility by $9$\n\nIf the sum of the digits are divisible by $9$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Euclidean-Algorithm":{"title":"Euclidean Algorithm","content":"This algorithm finds [[notes/math/discrete-math/number-theory/gcd|gcd]] by performing repeated division starting from the two numbers we want to find the [[notes/math/discrete-math/number-theory/gcd|gcd]] of **until we get a remainder of** $0$.\n\n- If $A = 0$ then $gcd(A, B) = B$, since the $gcd(0, B) = B$, and we can stop\n- If $B = 0$ then $gcd(A, B) = A$, since the $gcd(A, 0) = A$, and we can stop\n- Write $A$ in quotient remainder form $A = B \\cdot Q  + R$\n- Find $gcd(B, R)$, using the Euclidean Algorithm since $gcd(A, B) = GCD(B, R)$\n\n**Example**\n\n$$\n\\begin{flalign}\n\u0026A = 270 \\quad B = 192 \\quad A \\neq 0 \\text{ and } B \\neq 0 \\\\ \n\u0026192 | 270 = 1 \\text{ and remainder of } 78 \u003c=\u003e 270 = 192 \\times 1 + 78\\\\ \n\u0026gcd(192, 78) \\text{, since } gcd(270, 192) = gcd(192, 78)\\\\\n\n\u0026 ...\n\n\\end{flalign}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Euclidean-Division-Theorem":{"title":"Euclidean Division Theorem","content":"## Theorem\n\nGiven two integers $a$ and $b$, with $b \\neq 0$, there exists unique integers $q$ and $r$ such that: $$a = bq + r \\text{ and } 0 \\leq r \\lt |b|$$\n\nwhere $q$ is the quotient and $r$ is the remainder, $b$ is the divisor and $a$ is the dividend.\n\n## Long Divison\n\n$$\n\\require{enclose}\n\\begin{array}{rll}\n    125 \u0026\u0026 \\hbox{(Explanations)} \\\\[-3pt]\n   4 \\enclose{longdiv}{500}\\kern-.2ex \\\\[-3pt]\n      \\underline{4\\phantom{00}} \u0026\u0026 \\hbox{($4 \\times 1 = 4$)} \\\\[-3pt]\n      10\\phantom{0} \u0026\u0026 \\hbox{($5 - 4 = 1$)} \\\\[-3pt]\n      \\underline{\\phantom{0}8\\phantom{0}} \u0026\u0026 \\hbox{($4 \\times 2 = 8$)} \\\\[-3pt]\n      \\phantom{0}20 \u0026\u0026 \\hbox{($10 - 8 = 2$)} \\\\[-3pt]\n      \\underline{\\phantom{0}20} \u0026\u0026 \\hbox{($4 \\times 5 = 20$)} \\\\[-3pt]\n      \\phantom{00}0\n  \\end{array}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Euclids-Theorem":{"title":"Euclid's Theorem","content":"**Euclid's Theorem** is a fundamental, that asserts that there are infinitely many [[notes/math/discrete-math/number-theory/Prime numbers|prime numbers]].\n\n## Proof by Euclid\n\nConsider any finite list of prime numbers:\n\n$$p_1, p_2, ..., p_n$$\n\nIt will be shown that at least one additional prime number not in this list exists. ¬†Let¬†$P$¬†be the product of all the prime numbers in the list:\n$$\nP = p_1 \\cdot p_2 \\cdot p_3 \\cdot p_4 ... p_n\n$$\n\nLet $q = P + 1$. Then $q$ is either prime or not:\n\n- if $q$ is prime, then there is at least one more prime that is not in the list, namely, $q$ itself;\n- if $q$ is not a prime, then some prime factor $p$ divides $q$. If this factor $p$ were in our list, then it would divide $P$ (since $P$ is the product of every number in the list); but $p$ also divides $P + 1 = q$, as just stated. If $p$ divides $P$ and also $q$, then $p$ must also [[notes/math/discrete-math/number-theory/Divisibility#^9c52fd|divide the difference of the two numbers]], which is $(P+1) - P$ or just $1$. Since no prime number divides $1$, $p$ cannot be in the list. This means that at least one more prime number exists beyond those in the list.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Extended-Euclidean-Algorithm":{"title":"Extended Euclidean Algorithm","content":"The **extended Euclidean algorithm** is an algorithm to compute integers¬†xx¬†and¬†yy¬†such that\n\n$$ax + by = gcd(a,b)$$\n\ngiven¬†$a$¬†and¬†$b$.\n\nThe existence of such integers is guaranteed by¬†[[notes/math/discrete-math/number-theory/Bezout's Identity|B√©zout's Identity]].\n\nThe **extended Euclidean algorithm** can be viewed as the reciprocal of modular exponentiation.\n\nBy reversing the steps in the [[notes/math/discrete-math/number-theory/Euclidean Algorithm]], it is possible to find these integers¬†$x$¬†and¬†$y$. The whole idea is to start with the $gcd$ and recursively work our way backwards. This can be done by **treating the numbers as variables** until we end up with an expression that is **a linear combination of our initial numbers**. \n\nLet's find $gcd(102, 38):$\n\n$$\n\\begin{flalign}\n\u0026 102 = 2 \\times 38 + 26 \\\\\n\u0026 38 = 1 \\times 26 + 12 \\\\\n\u0026 26 = 2 \\times 12 + 2 \\\\\n\u0026 12 = 6 \\times 2 + 0\n\\end{flalign}\n$$\n\nWe start with our GCD. We rewrite it in terms of the previous two terms:\n\n$$2 = 26 - 2 \\times 12$$\n\nWe replace for¬†$12$¬†by taking our previous line¬†$(38 = 1 \\times 26 + 12)$¬†and writing it in terms of $12$:\n\n$$2 = 26 - 2 \\times (38 - 1\\times 26)$$\n\nCollect like terms, the¬†$26$'s, and we have\n\n$$2 = 3 \\times 26 - 2 \\times 38$$\n\nRepeat the process:\n\n$$2 = 3 \\times (102 - 2\\times 38) - 2\\times 38$$\n\nThe final result is our answer:\n\n$$2 = 3 \\times 102 - 8 \\times 38$$\n\nThus¬†$x = 3$ and $y-8$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Factorial":{"title":"Factorial","content":"$!$ - the factorial of a positive integer $n$ is the product of all the positive integers $\\leq n$.\n\n$$\nn! = n \\times (n - 1) \\times (n - 2) \\times ... \\times 2 \\times 1\n$$\n\n**Example 1**. Let $n$ be $5$:\n$$\n5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n$$\n\n**Example 2**.\n\n$$\nn = \\frac{3! \\times 5!}{4!} \n= \\frac{3 \\times 2 \\times 1 \\times 5 \\times 4 \\times 3 \\times 2 \\times 1}{4 \\times 3 \\times 2 \\times 1} \n= \\frac{3 \\times 2 \\times 1 \\times 5 \\times \\cancel{4} \\times \\cancel{3} \\times \\cancel{2} \\times \\cancel{1}}{\\cancel{4} \\times \\cancel{3} \\times \\cancel{2} \\times \\cancel{1}} = 30\n$$\n\nMathematicians agreed long time ago that:\n\n- $0! = 1$\n- $1! = 1$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Factorial-Prime":{"title":"Factorial Prime","content":"**Factorial Prime** is a prime number that is one less or more than a factorial.\n\n$$\n\\begin{align}\n\u0026\u0026 23 \u0026\u0026 719 \u0026\u0026 5 \u0026\u0026 \\\\\n\u0026\u0026 23 = 4! - 1 \u0026\u0026 719 = 6! -1 \u0026\u0026 5 = 3! -1 \u0026\u0026\n\\end{align}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Fibonacci-Sequence":{"title":"Fibonacci Sequence","content":"**Fibonacci Sequence** is a sequence such that each new number is the sum of the previous two numbers.\n\n$$\n\\begin{align}\n\u0026 F_0 = 0, \\quad F_1 = 1, \u0026\u0026 \\\\\n\u0026 F_n = F_{n-1} + F_{n-2} \u0026\u0026 \\\\\n\u00260, 1, 1, 2, 3, 5, 8, 13, 21, 34...\u0026\u0026\n\n\\end{align}\n$$\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Fundamental-Theorem-of-Arithmatics-FTA":{"title":"Fundamental Theorem of Arithmatics (FTA)","content":"**Fundamental Theorem of Arithmatics (FTA)** every integer greater than $1$ is either a prime or it is a products of [[notes/math/discrete-math/number-theory/Prime numbers|primes]], and this product is unique.\n\n\n## Prime factorization\n\n### Any factor Method\n\nJust find any factor, and continue the fractorizaton, until all factors are primes:\n\n$$\n\\begin{align}\n\u0026 90 \u0026\u0026 \\\\\n\u0026 9 \\times 10 \u0026\u0026 \\\\\n\u0026 3 \\times 3 \\times 5 \\times 2\u0026\n\\end{align}\n$$\n\n### Division\n\nStart dividing the number by the smallest prime until we get to $1$.\n\n$$\n\\begin{align}\n\u0026 90 \u0026\u0026 \\\\\n\u0026 90 \\div {\\color{green}{2}} = 45 \u0026\u0026 \\\\\n\u0026 45 \\div {\\color{green}{3}} = 15 \u0026\u0026 \\\\\n\u0026 15 \\div {\\color{green}{3}} = 5 \u0026\u0026 \\\\\n\u0026 5 \\div {\\color{green}{5}} = 1 \u0026\u0026 \\\\\n\u0026 {\\color{green}{2}} \\times {\\color{green}{3}} \\times {\\color{green}{3}} \\times {\\color{green}{5}} = 90 \u0026\u0026\n\\end{align}\n$$\n\n### Factor Tree\n\nA special diagram where we find the factors of a number, then the factors of those numbers, etc, until we can't factor any more.\n\n![factor tree of 42](notes/assets/factor-tree-of-42.png#invert_W)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Golden-Angle":{"title":"Golden Angle","content":"**Golden Angle** is created when you break up a circle such that the ratio of the big arc to the small arc is the [[notes/math/discrete-math/number-theory/Golden Ratio|Golden Ratio]].\n\n\n![the golden angle](notes/assets/Golden_Angle.svg)\n\n$$\ng \\approx 360 \\times 0.381966 \\approx 137.508^o\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Golden-Ratio":{"title":"Golden Ratio","content":"*/–∑–ª–∞—Ç–Ω–æ —Å–µ—á–µ–Ω–∏–µ/*\n\n**Golden Ratio** (*divine proportion*, *golden mean* or *golden section*) $\\varphi$ is a special number approximately equal to: \n\n$$\n1.6180339887498... = \\frac{1 + \\sqrt{5}}{2}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Integer":{"title":"Integer","content":"An **integer** is the number zero, a positive natural number or a negative integer with a minus sign. The negative numbers are the additive inverses of the corresponding positive numbers.\n\nThe [[notes/math/discrete-math/set-theory/Set|set]] of integers is denoted by $\\mathbb{Z}$. \n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Modular-Arithmetics":{"title":"Modular Arithmetics","content":"**Modular arithmetics** is a type of integer arithmetic where numbers wrap around a certain value, meaning they reset after reaching that value:\n\n$$A \\mod B = R \\text{ - remainder of division} $$\n\nAlso can be represented as:\n\n$$\n A \\mod B = A - \\lfloor \\frac{A}{B} \\rfloor \\times B\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Modular-Inverse":{"title":"Modular Inverse","content":"$$(7 / 4) \\bmod 5 = ?  $$\n$$( 7 * \\frac{1}{4}) \\bmod 5 = ?$$ \n$$( 7 * 4) \\bmod 5 = 3$$ \n\nWhen to know if a division in modular arithmetic has solution or no solution:\n\nIf the divisor and the module are [[notes/math/discrete-math/number-theory/Coprime Integers|coprimes]], then the division has solution.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Modular-Operations":{"title":"Modular Operations","content":"Module operations that can be performed in [[notes/math/discrete-math/number-theory/Modular Arithmetics|modular arithmetics]].\n\n## Addition\n\n$$\n(A + B) \\bmod C = (A \\bmod C + B \\bmod C) \\bmod C\n$$\n\n## Subtraction\n\n$$\n(A - B) \\bmod C = (A \\bmod C - B \\bmod C) \\bmod C\n$$\n\n## Multiplication\n\n$$\n(A * B ) \\bmod C = (A \\bmod C * B \\bmod C) \\bmod C\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Negafibonacci-Sequence":{"title":"Negafibonacci Sequence","content":"**Negafibonacci Sequence** is the extension of the [[notes/math/discrete-math/number-theory/Fibonacci Sequence]] to negative integers.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Number-Properties":{"title":"Number Properties","content":"### Binary Operation\n\n*Binary Operation* is a rule for combining two elements (called operands) to produce another element.\n\n- **Associativity**: \n\t- *Addition*: $a + (b + c) = (a + b) + c$\n\t- *Multiplication*: $a * (b * c) = (a * b) * c$\n- **Commutativity**:\n\t- *Addition*: $a + b = b + a$ \n\t- *Addition*: $a * b = b * a$\n- **Distributivity**: $a * (b + c) = ab + ac$\n- **Additive Identity**: $a + 0 = a$\n- **Additive Inverse**: $a + (-a) = 0$\n- **Multiplicative Identity**: $a * 1 = a$\n- **Multiplicative Inverse**: $a * \\frac{1}{a} = 1$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Parity":{"title":"Parity","content":"**Parity** is the porperty of an [[notes/math/discrete-math/number-theory/Integer|Integer]] of whether it is *even* or *odd*.\n\n## Even\n\n^2338e6\n\nAn even number is an integer of the form\n$$\nx = 2k\n$$\nwhere $k$ is an integer.\n\n## Odd\nAn odd number is an integer of the form\n$$\nx=2k + 1\n$$\n\n## `x` / `+` of odd and even numbers\n\n- even `+` even = even:  $2n + 2n = 4n = 2(2n)$\n- even `+` odd = even: $2n + (2n + 1) = 4n + 1 = 2(2n) + 1$\n- odd `+` odd = even: $(2n + 1) + (2n + 1) = 4n + 2 = 2(2n + 1)$\n- even `x` even = even: $2n * 2n = 4n^2 = 2(2n^2)$\n- even `x` odd = even: $2n * (2n + 1) = 4n^2 + 2n = 2n(2n +1)$\n- odd `x` odd = odd: $(2n + 1) * (2n + 1) = 4n^2 + 2n + 1 = 2n(2n + 1) + 1$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Perfect-Numbers":{"title":"Perfect Numbers","content":"*/—Å—ä–≤—ä—Ä—à–µ–Ω–∏ —á–∏—Å–ª–∞/*\n\n## Definition 1\n\n**Perfect Number** is a positive [[notes/math/discrete-math/number-theory/Integer|integer]] that equals the sum of its divisors *(except itself)*.\n\n$$\n\\begin{align}\n\u0026 6 \u0026\u0026 28 \\\\\n\u0026 1, 2, 3 | 6 \u0026\u0026 1, 2, 4, 7, 14 | 28 \\\\\n\u0026 1 + 2 + 3 = 6 \u0026\u0026 1 + 2 + 4 + 7 + 14 = 28 \\\\\n\\end{align}\n$$\n\n## Definition 2\n\n**Perfect number** is positive integer that is half the sum of all its divisors *(including itself)*.\n\n$$\n\\begin{align}\n\u0026 496 \u0026\u0026 8128 \\\\\n\u0026 1, 2, 4, 8, 16, 31, 62, 124, 248 | 496 \u0026\u0026 1, 2, 4, 8, 16, 32, 64, 127, 254, 508, 1016, 2032, 4064 | 8128 \\\\\n\u0026 \\frac{1 + 2 + 4 + 8 + 16 + 31 + 62 + 124 + 248 + 496}{2} = 496 \n\t\u0026\u0026 \\frac{1 + 2 + 4 + 8 + 16 + 32 + 64 + 127 + 254 + 508 + 1016 + 2032 + 4064}{2} = 8128 \\\\\n\\end{align}\n$$\n\n\u003e **We don't know**:\n\u003e - if there are infinite number of perfect numbers\n\u003e - if there are any odd perfect numbers\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Practical-Number":{"title":"Practical Number","content":"*/–ø—Ä–∞–∫—Ç–∏—á–Ω–∏ —á–∏—Å–ª–∞/*\n\n**Practical Number** is a positive integer $n$ such that all smaller positive integers can be represented as a sums of distinct divisors of $n$.\n\n$$\n\\begin{align}\n\u0026 8 \u0026\u0026 \\\\\n\u0026 1, 2, 4 | 8 \u0026\u0026 \\\\\n\u00261, 2, 3, 4, 5, 6, 7 \u003c 8\u0026\u0026 \\\\\n\u0026(1 + 2 = 3) \u003c 8\u0026\u0026 \\\\\n\u0026(2 + 4 = 6) \u003c 8 \\\\\n\u0026(1 + 2 + 4 = 7) \u003c 8\u0026\u0026 \\\\\n\u0026... \u0026\u0026\\\\\n\\end{align}\n$$\n\n## Facts\n\n1. Other than $1$ and $2$, all Practical numbers are divisible by $4$ or $6$\n2. The [[notes/math/discrete-math/number-theory/lcm]] of any two practical numbers is also a practical number\n3. The set of all practical numbers is **[[notes/math/discrete-math/number-theory/closed under...]]** multiplication\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Prime-Number-Theorem-PNT":{"title":"Prime Number Theorem (PNT)","content":"**Prime Number Theorem** gives an approximate value for the number of [[notes/math/discrete-math/number-theory/Prime numbers|primes]] less than or equal to any given positive real number $x$.\n\n$$\n\\pi(x) \\sim \\frac{x}{\\ln{x}}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Prime-Powers":{"title":"Prime Powers","content":"**Prime powers** is a [[notes/math/discrete-math/number-theory/Prime numbers|prime]] number raised to a power.\n\n$$\n\\begin{align}\n4 = 2^2 \\\\\n729 = 3^6\\\\\n\\end{align}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Prime-numbers":{"title":"Prime numbers","content":"**Prime numbers** are positive natural numbers $\u003e 1$ that can only be divided by $1$ and themselves.\n\n## Facts\n1. The only even prime number is $2$\n2. $0$ and $1$ are not prime numbers\n3. No primer number $\u003e 5$ ends in a $5$\n\n$1$ is not a prime number, because it could be included into the prime factorization of any number multiple times, making the product of the prime factors not unique, thus \"breaking\" the [[notes/math/discrete-math/number-theory/Fundamental Theorem of Arithmatics (FTA)]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Proof":{"title":"Proof","content":"**Proofs** are a finite sequence of claims that aim to show the truthfulness or falsehood of a statement.\n\n$$\\frac{A}{\\text{the  statement}} \\xrightarrow{tools / way} \\frac{B}{\\text{the  proof}}$$\n**Tools:** \n- Axioms\n- Definitions\n- Theorems\n- Propositions\n- Postulates\n- Facts \n\n**Ways**:\n- *Direct Proofs*: Proofs where the truthfulness or falsehood of a statement is reached by a direct combination of established facts, theorems, and axioms\n- *Induction Proofs*:\n\t1. Prove it for the base case $P(1)$\n\t2. Assume it is true for $P(n)$\n\t3. Then prove it for $P(n+1)$\n- Contrapositive Proofs\n- Exhaustion Proofs\n- Construction Proofs\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Quotient-remainder-theorem":{"title":"Quotient remainder theorem","content":"\n*–¢–µ–æ—Ä–µ–º–∞ –∑–∞ –¥–µ–ª–µ–Ω–∏–µ —Å –æ—Å—Ç–∞—Ç—ä–∫*\n\n\nUsed when we want to prove some properties about [[notes/math/discrete-math/number-theory/Modular Arithmetics|modular arithmetic]].\n\nGiven¬†**any**¬†integer¬†**A**, and¬†**a positive**¬†integer¬†**B**, there exist¬†**unique integers Q and R**¬†such that\n\n$$A= B * Q + R \\text{ where } 0 ‚â§ R \u003c B$$\nExamples:\n\n$$A = 7 \\\\ B= 2 \\\\ 7 = 2*3 + 1, 7 \\bmod 2 = 1$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Residue-Systems":{"title":"Residue Systems","content":"**Complete Residue Systems** (covering systems) is a set of integers such that every integer is [[notes/math/discrete-math/number-theory/Congruence|congruent]] to an unique member of the set module $n$.\n\n$$\n\\begin{align}\n\u0026 \\bmod 4 \u0026\u0026 \\\\\n\u0026 \\{1, 2, 3, 4\\}, \\{5, 6, 7, 8\\}, \\{17, 18, 19, 20\\}, \\{81, 82, 83, 84\\}, ... \u0026\u0026\n\\end{align}\n$$\n-----\n**Reduced Residue System** is a set of prime integers that are included of the **Complete Residue System** of the set module $n$.\n\n$$\n\\begin{align}\n\u0026 \\bmod 4 \u0026\u0026 \\\\\n\u0026 \\{1, 2, 3, 4\\} \u0026\u0026 \\\\\n\u0026 \\{1, 3\\}\u0026\u0026\n\\end{align}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Sieve-of-Eratosthenes":{"title":"Sieve of Eratosthenes","content":"/—Å–∏—Ç–æ—Ç–æ –Ω–∞ –ï—Ä–∞—Ç–æ—Å—Ç–µ–Ω/\n\nMake a list of all the integers less than or equal to $n$ (and greater than $1$). Strike out the multiples of all primes less than or equal to the $\\sqrt{n}$, then the numbers that are left are the [[notes/math/discrete-math/number-theory/Prime numbers|primes]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Tribonacci-Constant":{"title":"Tribonacci Constant","content":"Dividing any two numbers from the [[notes/math/discrete-math/number-theory/Tribonacci Sequence|Tribonacci Sequence]] equals to:\n\n$$\n\\approx 1.83929 = \\text{ tribonacci constant}...\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Tribonacci-Sequence":{"title":"Tribonacci Sequence","content":"**Tribonacci Sequence** is a generalization of the [[notes/math/discrete-math/number-theory/Fibonacci Sequence]] where each term is the sum of the **three** preceeding items.\n\n$$\n\\begin{align}\n\u0026 F_0 = 0, \\quad F_1 = 1 \u0026\u0026 \\\\\n\u0026 F_n = F_{n-1} + F_{n-2} + F_{n-3}\u0026\u0026 \\\\\n\u00260, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149,...\u0026\u0026\n\n\\end{align}\n$$\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Truncatable-primes":{"title":"Truncatable primes","content":"## Left-truncatable prime\nA [[notes/math/discrete-math/number-theory/Prime numbers|prime number]] which, in a given base, contains no 0, and if the leading (\"left\") digit is successively removed, then all resulting numbers are prime.\n\n$$9137, \\text{ since } 9137, 137, 37 \\text{ and } 7 \\text{ are all prime}$$\n\n## Right-truncatable prime\n\nA [[notes/math/discrete-math/number-theory/Prime numbers|prime number]] which remains prime when the last (\"right\") digit is successively removed. \n$$7393, \\text{ since }7393, 739, 73 \\text{ and } 7 \\text{ are all prime}$$\n\n##  Left-and-right-truncatable prime\n\nA [[notes/math/discrete-math/number-theory/Prime numbers|prime number]] is a prime which remains prime if the leading (\"left\") and last (\"right\") digits are simultaneously successively removed down to a one- or two-digit prime.\n\n$$1825711, \\text{ since }82571, 257 \\text{ and } 5 \\text{ are all prime}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/Ulam-Spiral":{"title":"Ulam Spiral","content":"The **Ulam spiral** or **prime spiral** is a graphical depiction of the set of [[notes/math/discrete-math/number-theory/Prime numbers|prime numbers]], constructed by writing the positive integers in a square spiral and specially marking the prime numbers.\n\nThe Ulam spiral is constructed by writing the positive integers in a spiral arrangement on a square lattice:\n\n![ulam spiral](notes/assets/ulam-spiral.png#invert_B)\n\nand then marking the prime numbers:\n\n![ulam spiral of primes](notes/assets/ulam-spiral-primes.png#invert_B)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/closed-under...":{"title":"closed under...","content":"## ... addition.\n\nA set is closed under¬†_addition_¬†if you can add any two numbers in the set and still have a number in the set as a result.\n\n## ... (scalar) multiplication.\n\nA set is closed under (scalar)¬†_multiplication_¬†if you can multiply any two elements, and the result is still a number in the set.\n\n-----\n\nGenerally, \"closed under¬†_some operation_\" means the elements of the set are not being able to \"escape\" the set using that operation. The result always $\\in$  the set they are from.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/gcd":{"title":"gcd","content":"**Greatest common divisor** is the greatest positive integer that can divide two or more integers without a remainder.\n\n**Example 1.**\n\n$$\ngcd(2, 4, 6, 10, 100) = 2\n$$\n\n**Example 2.**\n\n$$\ngcd(2, 3, 9, 30) = 1\n$$\n\nIf the **gcd** of two or more numbers $= 1$, then they are called *relative primes*.\n\n## Formula\n\n$$\n\\begin{align}\ngcd_{(a, b)} = \\frac{a \\times b}{lcm(a, b)}\n\\end{align}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/number-theory/lcm":{"title":"lcm","content":"**Least Common Multiple** of two integers $a, b$ is the smallest positive integer divisible by both $a$ and $b$.\n\n**Example 1.**\n$lcm(5, 11) = 55$\n\n\n**Example 2.**\n$lcm(4, 9) = 36$\n\nList the multiples of each number, then look for the **smallest number that appears** in each list. \n\n## Formula\n\n$$\n\\begin{align}\nlcm_{(a, b)} = \\frac{a \\times b}{gcd(a, b)}\n\\end{align}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Antisymmetric-Relation":{"title":"Antisymmetric Relation","content":"---\ntitle: Antisymmetric Relation\nenableToc: false\ntags: \n- set-theory\n- definition\n---\nIf $\\rho \\in A \\times A$ ( $\\rho$ is a [[notes/math/discrete-math/set-theory/Relation|relation]]):\n\n$\\rho$ is antisymmetric if for every $x$ and $y \\in A$ from $x \\: \\rho \\: y$ and $y \\: \\rho \\: x \\implies x = y$.\n\nAntisymmetric relation is:\n- \"less or equal to\" in the real number sets\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Bijective-Function":{"title":"Bijective Function","content":"When a [[notes/math/discrete-math/set-theory/Function|function]] $f$ is both [[notes/math/discrete-math/set-theory/Bijective Function|bijective]] and [[notes/math/discrete-math/set-theory/Surjective Function|surjective]], it's called **bijective** (–±–∏–µ–∫—Ü–∏—è).\n\nBijective function is a function between the elements of two [[notes/math/discrete-math/set-theory/Set|sets]], where each element of one set is paired with exactly one element of the other set, and each element of the other set is paired with exactly one element of the first set.\n\n![bijection diagram](notes/assets/bijection.svg#invert_B)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Cartesian-Product":{"title":"Cartesian Product","content":"*(–¥–µ–∫–∞—Ä—Ç–æ–≤–æ –ø—Ä–æ–∏–∑–≤–¥–µ–Ω–∏–µ)*\n\nGiven [[notes/math/discrete-math/set-theory/Set|sets]] $A$ and $B$, the cartesian product of $A$ and $B$, denoted $A \\times B$ and read as \"$A$ cross $B$\" is the set of all [[notes/math/discrete-math/set-theory/Ordered Pairs|ordered pairs]] $(a,b)$, where $a \\in A$ and $b \\in B$.\n\n$$A \\times B = \\{(a,b) | a \\in A \\wedge b \\in B\\}$$\n\nExamples: \n$$A = \\{1,2\\}, B = \\{c,d\\}, A \\times B = \\{(1,c),(1,d),(2,c),(2,d)\\}$$\n$$A = \\{1,2\\}, B = \\{\\$,1\\}, C= \\{x, y\\}$$\n$$A \\times B \\times C = \\{(1, \\$, x), (1, \\$, y), (1, !, y), (2, \\$, x), (2, \\$, y), (2, !, x), (2, !, y)\\}$$\nThe number of pairs is derived from multiplying the cardinality of the sets ($n(A) \\times n(B)$).\n\n\u003e **Cartesian Plane (–¥–µ–∫–∞—Ä—Ç–æ–≤–∞ —Ä–∞–≤–Ω–∏–Ω–∞)**\n\u003e To find all the points on the cartesian plane, do the cartesian product of $R - R \\times R$.\n\n## Properties\n\n- **Distributive**: $A \\times (B \\cup C) = (A \\times B) \\cup (A \\times C)$ or $A \\times (B \\cap C) = (A \\times B) \\cap (A \\times C)$\n- $\\text{if } A \\times A = B \\times B \\text{, then } A = B$\n\nThe cartesian product of two sets is also a [[notes/math/discrete-math/set-theory/Relation|relation]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Class-Set-Theory":{"title":"Class (Set Theory)","content":"A **class** is a collection of [[notes/math/discrete-math/set-theory/Set|sets]] that can be unambiguously defined by a property that all its members share.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Complement":{"title":"Complement","content":"*–¥–æ–ø—ä–ª–Ω–µ–Ω–∏–µ*\n\nThe complement of [[notes/math/discrete-math/set-theory/Set|set]] $A$, often denoted by $A^c$ (or $A'$, or $\\overline{A}$) is the set of elements not in $A$.\n\n$$\\overline{A} = \\{ x \\in U \\text{ | } x \\notin A \\}$$\n*Example:*\n$$A = \\{1,2,3\\}, U = \\{1,2,5,6\\}, \\overline{A}=\\{5,6\\}$$\n\nThe **relative complement** of $A$ with respect to a set $B$ is termed [[notes/math/discrete-math/set-theory/Set Difference|set difference]].\n\n## Properties\n\n$$A \\cup \\overline{A} = U$$\n\n$$\\overline{\\overline{A}} = A$$\n\n$$\\overline{U} = \\varnothing \\text{ and } \\overline{\\varnothing} = U$$\n\n## De Morgan's Laws\n\n$$\\overline{(A \\cup B)} = \\overline{A} \\cap \\overline{B}$$\n$$\\overline{(A \\cap B)} = \\overline{A} \\cup \\overline{B} $$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Disjoint-sets":{"title":"Disjoint sets","content":"Two [[notes/math/discrete-math/set-theory/Set|sets]] are said to be **disjoint sets** if they have no element in common. Equivalently, two disjoint sets are sets whose [[notes/math/discrete-math/set-theory/Intersection|intersecton]] is the [[notes/math/discrete-math/set-theory/Empty Set|Empty Set]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Domain":{"title":"Domain","content":"The **domain** of a function is the [[notes/math/discrete-math/set-theory/Set|set]] of inputs accepted by the function. It sometimes is denoted by $dom(f)$ or $dom f$, where $f$ is the function.\n\nMore precisely, given a function $f: X \\rightarrow Y$, the domain of $f$ is $X$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Empty-Set":{"title":"Empty Set","content":"\nA [[notes/math/discrete-math/set-theory/Set|set]] with no elements $$A = \\{x \\in N | 3 \u003c x \u003c 4\\} = \\{\\} = \\varnothing$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Equivalence-Class":{"title":"Equivalence Class","content":"When the elements of some [[notes/math/discrete-math/set-theory/Set|set]] $S$ have a notion of [[notes/math/discrete-math/set-theory/Equivalence Relation|equivalence]], then one may naturally split the set $S$ into **equivalence classes**. These equivalence classes are constructed so that elements $a$  and $b$ belong to the same **equivalence class** iff they are equivalent.\n\nFormally, given a set $S$ and an equivalence relation $\\sim$ on $S$, the equivalence class of an element $a$ in $S$, denoted by $[a]$, is the set\n\n$$\n\\{x \\in S : x \\sim a\\}\n$$\nof elements which are equivalent to $a$. The equivalence classes form a [[notes/math/discrete-math/set-theory/Partition of a set|partition]] of $S$ and is sometimes called the **quotient set** or the **quotient space** of $S$ by $\\sim$ , and is denoted by $S / \\sim$.\n\n**Example**:\n\nIf $X$ is the set of all cars, and $\\sim$ is the equivalence relation of \"has the same color as\", then one particular equivalence class would consist of all green cars, and $X / \\sim$ could be naturally identified with the set of all car colors.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Equivalence-Relation":{"title":"Equivalence Relation","content":"[[notes/math/discrete-math/set-theory/Relation|Relations]] that are [[notes/math/discrete-math/set-theory/Reflexive Relation|reflexive]], [[notes/math/discrete-math/set-theory/Symmetric Relation|symmetric]] and [[notes/math/discrete-math/set-theory/Transitive Relation|transitive]] are called relations of equivalence.\n\nRelations of equivalance are:\n- [[notes/math/discrete-math/set-theory/Set Equivalence|Set Equivalence]] in set theory\n- similarity in triangles\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Finite-set":{"title":"Finite set","content":"\nA [[notes/math/discrete-math/set-theory/Set|set]] with finite number of elements $$A = \\{1,2,3,4,5\\}$$\nA set is finite if its [[notes/math/discrete-math/set-theory/Set Equivalence|equivalent]] to the set of **Natural numbers**.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Function":{"title":"Function","content":"A **function** asisgns to each element of a [[notes/math/discrete-math/set-theory/Set|set]], **exactly one element** of a [[notes/math/discrete-math/set-theory/Relation|related]] set.\n\n$$\nf \\subseteq X \\times Y\n$$\n\n$$\nf: X \\rightarrow Y\n$$\n\n\n–ê–∫–æ –¥–µ—Ñ–∏–Ω–∏—Ü–∏–æ–Ω–Ω–∞—Ç–∞ –æ–±–ª–∞—Å—Ç $X$ –µ –¥–µ–∫–∞—Ä—Ç–æ–≤–æ—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ:\n$$\n\\begin{align}\nX = X_1 \\times X_2 \\times ... X_n \\\\\nf(x_1, x_2, x_3,..., x_n)\n\\end{align}\n$$\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Function-Codomain":{"title":"Function Codomain","content":"*–æ–±–ª–∞—Å—Ç –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è*\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Function-Domain":{"title":"Function Domain","content":"*–¥–µ—Ñ–∏–Ω–∏—Ü–∏–æ–Ω–Ω–∞—Ç–∞ –æ–±–ª–∞—Å—Ç*\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Function-Inversion":{"title":"Function Inversion","content":"If [[notes/math/discrete-math/set-theory/Function|function]] $f: A \\rightarrow B$ is a [[notes/math/discrete-math/set-theory/Bijective Function|bijection]], then for each $a \\in A$ there's only one $b \\in B$ (and the counter for each $b \\in B$ there's only one $a in A$), the function $f^-1: B \\rightarrow A$ is called **inverse function** and it's defined by $f^-1(b) = a$.\n\n![diagram of a function inverse](notes/assets/function-inverse.png#invert_B)\n\n\n\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Infinite-Set":{"title":"Infinite Set","content":"A [[notes/math/discrete-math/set-theory/Set|set]] with infinite number of elements $$A=\\{1,2,3,4, \\dots\\}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Injective-Function":{"title":"Injective Function","content":"An injective [[notes/math/discrete-math/set-theory/Function|function]] (also known as *injection*, *one-to-one function*, *–∏–Ω–µ–∫—Ü–∏—è*, *–µ–¥–Ω–æ–∑–Ω–∞—á–Ω–∞*) is a functon $f$ that maps distinct elements of its [[notes/math/discrete-math/set-theory/Function Domain|domain]] to distinct elements; that is, $f(x_1) = f(x_2)) \\implies x_1 = x_2$.\n\nIn other words, every element of the function's [[notes/math/discrete-math/set-theory/Function Codomain|codomain]] is the image of **at most** one element of its domain.\n\n![injective function diagram](notes/assets/Injection.svg#invert_B)\n\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Intersection":{"title":"Intersection","content":"The intersection of [[notes/math/discrete-math/set-theory/Set|sets]] $A$ and $B$ is the set containing all elements of $A$ that also belong to $B$ or equivalently, all elements of $B$ that also belong to $A$.\n\n$$A \\cap B= \\{x | x \\in A \\text{ and } b \\in B\\}$$\n*Example:*\n$A = \\{1, 2, 3\\}, B = \\{3, 4, 5 ,6\\}, A \\cap B = \\{3\\}$\n\n## Properties\n\n- **Commutative**:  $A \\cap B = B \\cap A$\n- **Associative**: $(A \\cap B) \\cap C = A \\cap (B \\cap C)$\n- **Distributive**:  $A \\cap (B \\cup C) = (A \\cap B) \\cup (A \\cap C)$\n- **Idempotency**:  $A \\cap A = A$\n- **Universal Set**:  $A \\cap U = A$\n- **Empty Set**: $A \\cap \\varnothing = \\varnothing$\n- **Absorption Law**: $(A \\cap B) \\cup B = B$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Number-Sets":{"title":"Number Sets","content":"\nList of all number [[notes/math/discrete-math/set-theory/Set|sets]].\n\n|Name | Notation | Examples | Bulgarian|\n|------|---------|----------|---------|\n| Natural Numbers| $N$ | $1,2,3,4$ | –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–∏ —á–∏—Å–ª–∞\n| Integeres | $Z$ | $-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5$ | –¶–µ–ª–∏ —á–∏—Å–ª–∞ |\n| Rational Numbers | $Q$ | $\\frac{1}{2}, \\frac{4}{7}, \\frac{5}{8}, \\frac{10}{20}, \\dots$| –†–∞—Ü–∏–æ–Ω–∞–ª–Ω–∏ —á–∏—Å–ª–∞ |\n| Irrational Numbers \u003cbr/\u003e \u003csmall\u003e(numbers that cannot be represented by two integers)\u003c/small\u003e | $I$ | $\\pi, \\sqrt{2}, \\sqrt{3}$ | –ò—Ä–∞—Ü–∏–æ–Ω–∞–ª–Ω–∏ —á–∏—Å–ª–∞ |\n| Real Numbers | $R$ | $R \\cup I$ | –†–µ–∞–ª–Ω–∏ —á–∏—Å–ª–∞ |\n| Complex Numbers | $C$ | $R \\cup \\mathrm i$ | –ö–æ–º–ø–ª–µ–∫—Å–Ω–∏ —á–∏—Å–ª–∞|\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Ordered-Pairs":{"title":"Ordered Pairs","content":"*(ordered $n$-tuples / –ø–æ–¥—Ä–µ–¥–µ–Ω–∏ $n$-—Ç–æ—Ä–∫–∏)*\n\nThe pair of elements of a [[notes/math/discrete-math/set-theory/Set|set]] that occur **in a particular order** and are enclosed in brackets is called a set of ordered pairs.\n\n$$ A = \\{1,2\\}, B = \\{2, 1\\}, A = B $$\n$$(1, 2) \\neq  (2,1)$$\n$$(x_1,x_2,x_3,x_4,\\dots,x_n) = (y_1, y_2,y_3,y_4,\\dots, y_n)$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Partial-Order-Relation":{"title":"Partial Order Relation","content":"*—Ä–µ–ª–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—Ä–µ–¥–±–∞*\n\n[[notes/math/discrete-math/set-theory/Relation|Relations]] that are [[notes/math/discrete-math/set-theory/Reflexive Relation|reflexive]], [[notes/math/discrete-math/set-theory/Antisymmetric Relation|antysimmetric]] and [[notes/math/discrete-math/set-theory/Transitive Relation|transitive]] are called partials order relation.\n\nRelations of partial ordering are:\n- \"less or equals to\" in the real numbers\n- $a \\div b$ in the natural numbers set \n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Partial-function":{"title":"Partial function","content":"A partial function $f$ from a set $X$ to a set $Y$ is a function from a subset $S$ of $X$ to $Y$. \n\n$X$ is the [[notes/math/discrete-math/set-theory/Domain|domain]] and $Y$ is [[notes/math/discrete-math/set-theory/Function Codomain|codomain]].\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Partition-of-a-set":{"title":"Partition of a set","content":"A partition of a [[notes/math/discrete-math/set-theory/Set|set]] is a grouping of its elements into non-empty subsets, in such a way that every element is included in exactly one [[notes/math/discrete-math/set-theory/Subset|subset]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Power-Set":{"title":"Power Set","content":"Power [[notes/math/discrete-math/set-theory/Set|set]] of $A$, $P(A)$, is the set of all [[notes/math/discrete-math/set-theory/Subset|subsets]] of $A$.\n$$B=\\{0,1\\}, P(B) = \\{\\varnothing,\\{0\\},\\{1\\},\\{0,1\\}\\}$$\n\nThe number of subsets in a set is $2^n$, $n$ = number of elements.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Reflexive-Relation":{"title":"Reflexive Relation","content":"If $\\rho \\in A \\times A$ ( $\\rho$ is a [[notes/math/discrete-math/set-theory/Relation|relation]]):\n\n$\\rho$ is reflexive in $A$, if for each $x \\in A$ then $x \\: \\rho \\: x$.\n\nExamples:\n\nReflexive is the binary relation of \n\n- \"equal to\" on the set of real numbers.\n- \"is a subset of\" (set inclusion)\n- \"divides\"\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Relation":{"title":"Relation","content":"Relation is a connection between two [[notes/math/discrete-math/set-theory/Set|sets]]. Relation between only two sets is called *binary*.\n\n$\\in\\text{, }\\notin\\text{, }\u003e\\text{, }\u003c\\text{, }\\leq\\text{, }\\geq$ are also binary relations. \n\n$\\perp\\text{, }\\not\\perp\\text{, }\\triangleq$ are also binary relations.\n\nTwo relations are equal if and only if they are have the same [[notes/math/discrete-math/set-theory/Ordered Pairs|ordered pairs]].\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set":{"title":"Set","content":"**Set** is a collection of things, called elements.\n\nNotation defining a set:\n\n$$A = \\{1, 2, 3, 4, 5,\\dots\\}$$\nCapital letters are used for set names, elements are separated with comma and ellipsis (‚Ä¶) is used:\n\n-   ¬†as a shortcut for listing many elements, when in the middle for finite sets\n-   to indicate a set goes on forever, when at the end for infinite sets\n\nNotation for representing:\n\n- An element belongs to a set:  $1 \\in B$\n- An element does not belong to a set: $5 \\notin B$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set-Builder-Notation":{"title":"Set Builder Notation","content":"–ó–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á—Ä–µ–∑ –∑–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏—á–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ*\n\nExamples of writing [[notes/math/discrete-math/set-theory/Set|set]] definitions:\n\n$$A = \\{ x | x \u003c 0 \\}$$\n$$A = \\{ x \\in R | -2 \u003c x \u003c5 \\}$$\n$$ A = \\{ x \\in R | x^2 = 4 \\}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set-Cardinality":{"title":"Set Cardinality","content":"\nThe number of distinct elements in a [[notes/math/discrete-math/set-theory/Set|set]]:\n$A = {1,2,3,4,5}, |A| = 5$\n$A=\\{\\},|A| = 0$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set-Difference":{"title":"Set Difference","content":"The difference between [[notes/math/discrete-math/set-theory/Set|set]] $A$ and $B$ is a set that contains all elements of $A$, but no elements of $B$.\n\n\n$$A \\textbackslash B = \\{x | x \\in A \\text{ and } x \\in B \\}$$\n\nThe difference between a set $A$ and the [[notes/math/discrete-math/set-theory/Universal Set]] is called the absolute [[notes/math/discrete-math/set-theory/Complement|complement]].\n\nThe difference between sets $A$ and $B$ is also an [[notes/math/discrete-math/set-theory/Intersection|intersection]] of $A$ and the [[notes/math/discrete-math/set-theory/Complement|complement]] of $B$ ($\\overline{B}$).\n\n$$A - B = A \\cap \\overline{B}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set-Equality":{"title":"Set Equality","content":"\n**Axiom[^1] of Extension** (*–∞–∫—Å–∏–æ–º–∞ –Ω–∞ —É–¥—ä–ª–∂–∞–≤–∞–Ω–µ—Ç–æ / —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ—Ç–æ*): ¬†a [[notes/math/discrete-math/set-theory/Set|set]] is determined by what its elements are - not in the order in which they might be listed or the fact that some elements might be listed more than once.\n\nWe say that [[notes/math/discrete-math/set-theory/Set|sets]] $A$ and $B$ are equal if and only if $A \\subset B$ –∏ $B \\subset A$.\n\n$$\nA= \\{1,2,3\\} \\text{, } B = \\{1, 1, 2,3\\} \\text{, } A = B\n$$\n\n**Set equality** is also a [[notes/math/discrete-math/set-theory/Relation|Relation]] between two sets.\n\n[^1]: **axiom**: a statement that is taken to be true to serve as a starting point for further reasoning and arguments\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Set-Equivalence":{"title":"Set Equivalence","content":"*—Ä–∞–≤–Ω–æ–º–æ—â–Ω–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞*\n\nSets with the same [[notes/math/discrete-math/set-theory/Set Cardinality|cardinal number]]  $$A = \\{1,2,3\\}, B = \\{5,6,7\\}, A \\sim B$$\nTwo [[notes/math/discrete-math/set-theory/Infinite Set|infinite sets]]  can also be equivalent: The set of all real numbers in $[0; 1]$ is equivalent to the set of all real numbers in $[0; 2]$.\n\nTwo sets are equivalent if there's a [[notes/math/discrete-math/set-theory/Bijective Function|bijection]] between them.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Singleton-Set":{"title":"Singleton Set","content":"A [[notes/math/discrete-math/set-theory/Set|set]] that has only one element $$A = \\{1\\}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Subset":{"title":"Subset","content":"An excerpt of a [[notes/math/discrete-math/set-theory/Set|set]].\n\n$$A = \\{1, 2, 3\\}, B = \\{1,2,3,4,5,6,7\\}, A \\subseteq B$$\n$A$ is subset of $B$, if and only if, every element of $A$ is also an element of $B$.\n\nEvery set is a subset of itself: $A \\subseteq A$, $B \\subseteq B$,...\n\nThe empty set ($\\varnothing$) is a subset of every set: $\\varnothing \\subseteq A$,$\\varnothing \\subseteq B$,...\n\n\n## Proper subset $\\subset$\n\n^51fb8d\n\nwhen the set has more elements than the subset.\n\n$$ A= \\{1,2,3\\}, B = \\{1,2,3,4,5,6,7\\}, A \\subset B $$\n\n$A$ being subset of $B$ is also a [[notes/math/discrete-math/set-theory/Relation|relation]].\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Symmetric-Relation":{"title":"Symmetric Relation","content":"If $\\rho \\in A \\times A$ ( $\\rho$ is a [[notes/math/discrete-math/set-theory/Relation|relation]]):\n\n$\\rho$ is symmetric, if for every $x$ and $y \\in A$  from $x \\: \\rho \\: y$ follows $y \\: \\rho \\: x$.\n\nSymmetric relation is:\n- \"equals to\" in sets\n- \"equals to\" in real numbers\n- $\\perp$ in a plane\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Total-function":{"title":"Total function","content":"A [[notes/math/discrete-math/set-theory/Function|function]] is called **total** function of $X$ in $Y$, if for $a \\in X$ **exists eactly one** $b \\in Y$ such as $(a, b) \\in f$.\n\nIf a function is total, it's called just a function.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Transitive-Relation":{"title":"Transitive Relation","content":"If $\\rho \\in A \\times A$ ( $\\rho$ is a [[notes/math/discrete-math/set-theory/Relation|relation]]):\n\n$\\rho$ is a transitive relation if for each $x$, $y$ and $z \\in A$ from $x \\: \\rho \\: y$ and $x \\: \\rho \\: y \\implies x \\: \\rho \\: z$.\n\nTransitive relations are:\n- \"greater than\" in the set of real numbers\n- \"is subset of\" in set theory\n- \"equality\" in the set of real numbers\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Union":{"title":"Union","content":"The union of two [[notes/math/discrete-math/set-theory/Set|sets]] $A$ and $B$ is the set of elements which are in $A$, in $B$, or in both $A$ and $B$.\n\n$$ A \\cup B = \\{x | x \\in A \\text{ or } b \\in B   \\}$$\n\n*Example:*\n$A = \\{1, 2, 3\\}, B = \\{4, 5 ,6\\}, A \\cup B = \\{1,2,3,4,5,6\\}$\n\n## Properties\n\n- **Commutative**:  $A \\cup B = B \\cup A$\n- **Associative**: $(A \\cup B) \\cup C = A \\cup (B \\cup C)$\n- **Distributive**:  $A \\cup (B \\cap C) = (A \\cup B) \\cap (A \\cup C)$\n- **Idempotency**:  $A \\cup A = A$\n- **Universal Set**:  $A \\cup U = U$\n- **Empty Set**: $A \\cap \\varnothing = A$\n- **Absorption Law**: $(A \\cup B) \\cap B = B$\n- The union of [[notes/math/discrete-math/set-theory/Finite set|finite sets]] is a finite set itself\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Universal-Set":{"title":"Universal Set","content":"*—É–Ω–∏–≤–µ—Ä—Å—É–º*\n\nA [[notes/math/discrete-math/set-theory/Set|set]] that contains other sets and more.\n\n$$A = \\{1,2,3\\}, B = \\{1, 2, 7, 6\\}, U = \\{1,2,3,4,6,7\\}$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/discrete-math/set-theory/Venn-Diagrams":{"title":"Venn Diagrams","content":"A¬†Venn diagram¬†is a widely used diagram style that shows the logical relation between [[notes/math/discrete-math/set-theory/Set|sets]], popularized by John Venn in the 1880s.\n\n$$\n–ê = \\{1, 2, 3\\}, B= \\{1, 2\\}, B \\subseteq A, C = \\{7,8\\}\n$$\n\n![example of venn diagram](notes/assets/VennDiagramExample.png#invert_B)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Elimination-matrix":{"title":"Elimination matrix","content":"The entire collection of all the [[notes/math/linear-algebra/Simple row operation|simple row operations]] we perform to change a [[notes/math/linear-algebra/Matrix|matrix]] into [[notes/math/linear-algebra/Row-echelon form#^3c454c| reduced row-echelon]] form can be brought together in one matrix, and we call that matrix the elimination matrix, $E$ (–µ–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞).\n\n$$\n\\begin{align}\nA \\cdot I = A \\\\\nI \\cdot A = A \\\\\nA^-1 \\cdot A = I \\\\\nA \\cdot A^-1 = I \\\\\n{\\color{green}{E \\cdot A = I}} \n\\end{align}\n$$\n\n### Proof that $E$ is square\n\n$$\n\\begin{align}\n\u0026 A = \\begin{bmatrix}\n2 \u0026 4 \\\\\n0 \u0026 -3 \\\\\n\\end{bmatrix}\n\\\\ \\\\\n\u0026 E \\cdot A =  I \\\\ \\\\\n\u0026 {\\color{red}{2}} \\times {\\color{green}{2}} \\cdot {\\color{green}{2}} \\times {\\color{red}{2}} = {\\color{red}{2}} \\times {\\color{red}{2}} \\\\\n\\end{align}\n$$\n\n### Example\n\nPerforming simple row operations on $A$ to get it to reduced row-echelon form:\n\n$$\n\\begin{align}\nA = \\begin{bmatrix} 2 \u0026 4 \\\\ 0 \u0026 -3 \\\\ \\end{bmatrix} \n\\xrightarrow{\\frac{1}{2}R_1 \\rightarrow R_1}\n\\begin{bmatrix} 1 \u0026 2 \\\\ 0 \u0026 -3 \\end{bmatrix}\n\\xrightarrow{-\\frac{1}{3}R_2 \\rightarrow R_2}\n\\begin{bmatrix} 1 \u0026 2 \\\\ 0 \u0026 1 \\end{bmatrix} \n\\xrightarrow{R_1 - 2R_2 \\rightarrow R_1}\n\\begin{bmatrix} 1 \u0026 0 \\\\ 0 \u0026 1  \\end{bmatrix}\n\\end{align}\n$$\n\n\nRepresenting the row operations with matrices, using $I$:\n\n$$\n\\begin{flalign}\n\\frac{1}{2}R_1 \\rightarrow R_1 \n\\longrightarrow \nE_1 = \\begin{bmatrix} \\frac{1}{2} \u0026 0 \\\\ 0 \u0026 1 \\\\ \\end{bmatrix} \\\\\n\\\\\n-\\frac{1}{3}R_2 \\rightarrow R_2 \n\\longrightarrow\nE_2 = \\begin{bmatrix} 1 \u0026 0 \\\\ 0 \u0026 -\\frac{1}{3} \\end{bmatrix} \\\\\n\\\\\nR_1 - 2R_2 \\rightarrow R_1\n\\longrightarrow\nE_2 \\begin{bmatrix} 1 \u0026 -2 \\\\ 0 \u0026 1  \\end{bmatrix}\n\\end{flalign}\n$$\n\nTo get the elimination matrix, multiply $E_n .... E_4 \\cdot E_3 \\cdot E_2 \\cdot E_1 = E$ :\n\n$$\n\\begin{flalign}\nE_3 \\cdot E_2 \\cdot E_1 = \\begin{bmatrix} 1 \u0026 -2 \\\\ 0 \u0026 1  \\end{bmatrix} \\cdot \\begin{bmatrix} 1 \u0026 0 \\\\ 0 \u0026 -\\frac{1}{3} \\end{bmatrix} \\cdot \\begin{bmatrix} \\frac{1}{2} \u0026 0 \\\\ 0 \u0026 1 \\\\ \\end{bmatrix} = E = \\begin{bmatrix} \\frac{1}{2} \u0026 \\frac{2}{3} \\\\ 0 \u0026 -\\frac{1}{3} \\end{bmatrix}\n\\end{flalign}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Gaus-Jordan-Elimination":{"title":"Gaus-Jordan Elimination","content":"An algorithm that uses [[notes/math/linear-algebra/Simple row operation|simple row operations]] to bring a [[notes/math/linear-algebra/Matrix|matrix]]  into [[notes/math/linear-algebra/Row-echelon form|row-echelon form]].\n\nSteps:\n1. *optional*: Pull out any scalars from each row in the matrix.\n2. If the first entry in the first row is $0$, swap it with another row that has a non-zero entry in its first column. Otherwise, move to step 3.\n3. Multiply through the first row by a scalar to make the leading entry equal to $1$.\n4. Add scaled multiples of the first row to every other row in the matrix until every entry of the first column, other than the leading $1$ in the first row, is a $0$.\n5. Go back to step 2 and repeat the process until the matrix is in **reduced row-echelon form**.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Identity-matrix":{"title":"Identity matrix","content":"**The indentity matrix** is a square [[notes/math/linear-algebra/Matrix|matrix]] that when multiplied by another matrix you don't change the value of the other matrix. It's common to abbreviate it it as just $I_{2\\times2}$ as $I_2$, $I_{3\\times3}$ as just $I_3$, etc, and they look like this:\n\n$$\n\\begin{align}\nI_2 = \\begin{bmatrix}\n1 \u0026 0 \\\\\n0 \u0026 1\n\\end{bmatrix} \n\n\\quad\n\nI_3 = \\begin{bmatrix}\n1 \u0026 0 \u0026 0 \\\\\n0 \u0026 1 \u0026 0 \\\\\n0 \u0026 0 \u0026 1\n\\end{bmatrix}\n\n\\quad\n\nI_4 = \\begin{bmatrix}\n1 \u0026 0 \u0026 0 \u0026 0 \\\\\n0 \u0026 1 \u0026 0 \u0026 0 \\\\\n0 \u0026 0 \u0026 1 \u0026 0 \\\\\n0 \u0026 0 \u0026 0 \u0026 1\n\\end{bmatrix}\n\\end{align}\n$$\n\n### Proof that I is a square matrix\n\n$$  \n\\begin{align}  \nA = \\begin{bmatrix}  \n4 \u0026 -6 \\\\  \n1 \u0026 1 \\\\  \n-2 \u0026 9  \n\\end{bmatrix} \\\\ \\\\  \nI \\cdot  \\begin{bmatrix}  \n4 \u0026 -6 \\\\  \n1 \u0026 1 \\\\  \n-2 \u0026 9  \n\\end{bmatrix}  \n= \\begin{bmatrix}  \n4 \u0026 -6 \\\\  \n1 \u0026 1 \\\\  \n-2 \u0026 9  \n\\end{bmatrix}  \n\\end{align}   \n$$\n\nThe dimensions of $A$ are  $3 √ó\\times 2$, so let‚Äôs substitute those into the equation to get a visual picture of the dimensions.\n\n$$\n\\begin{align}\nI \\cdot 3 \\times 2 = 3 \\times 2 \\\\\nR \\times C \\cdot 3 \\times 2 = 3 \\times 2\n\\end{align}\n$$\n\nWe know the identity matrix must have $3$ columns:\n\n$$\nR \\times 3 \\cdot 3 \\times 2 = 3 \\times 2 \n$$\n\nWe also know that the dimensions of the result matrix on the right comes from the rows of the first matrix and the columns of the second matrix.\n\n$$\n3 \\times 3 \\cdot 3 \\times 2 = 3 \\times 2 \n$$\n\n### Properties of $I$\n\n$$\n\\begin{flalign}\n\u0026I \\cdot A = A, \\text{ but } I \\text{ must have the same number of columns as }A \\text{ has rows} \\\\\n\u0026A \\cdot I = A, \\text{ but } I \\text{ must have the same number of columns as }A \\text{ has columns}\n\\end{flalign}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Linear-systems":{"title":"Linear systems","content":"A linear system is a system of equations, defined for a set of unknown variables, where each of the variables is linear (the variables are first degree, or raised to the power of $1$).","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix":{"title":"Matrix","content":"The [[notes/math/linear-algebra/Linear systems|Linear Systems]]\n\n$$\n\\begin{align}\n3x + 2y = 7 \\\\\nx - 6y = 0\n\\end{align}\n$$\n\ncan be represented as a matrix.\n\n$$\n\\begin{bmatrix}\n3 \u0026 2 \\\\\n1 \u0026 -6\n\\end{bmatrix}\n$$\n\nBy bringing the constants of the equation, we get the **augmented matrix** (—Ä–∞–∑—à–∏—Ä–µ–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞):\n\n$$\n\\begin{bmatrix}\n3 \u0026 2 \u0026\\bigm| \u0026 7\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Addition":{"title":"Matrix Addition","content":"Adding two [[notes/math/linear-algebra/Matrix|matrices]] is defined only if both matrices have the same dimensions.\n\n$$\n\\begin{bmatrix}\na \u0026 b \\\\ \nc \u0026 d \n\\end{bmatrix} \n+ \\begin{bmatrix}\ne \u0026 f \\\\ \ng \u0026 h \n\\end{bmatrix} \n= \\begin{bmatrix}\na + e \u0026 b + f \\\\ \nc + g \u0026 d + h \n\\end{bmatrix} \n$$\n\nAddition is\n- **commutative** - $A + B = B + A$ \n- **associative** - $(A + B) + C = A + (B + C)$.\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Multiplication":{"title":"Matrix Multiplication","content":"[[notes/math/linear-algebra/Matrix]] multiplication is:\n\n- **NOT commutative** - $A\\cdot B \\neq B\\cdot A$ \n- **associative** - $(AB)C = A(BC)$\n- **distributive** - $A(B + C) = AB + AC$\n\n\nTo multiply a matrix by another matrix **the number of columns in the first matrix must be equal to the number of rows in the second matrix**. That's because, when we multiply one matrix by another, we multiply the rows in the first matrix by the columns of the second matrix.\n\n$$\n\\begin{align}\nA = \n\\begin{bmatrix}\n2 \u0026 6 \\\\ \n3 \u0026 -1 \n\\end{bmatrix}  \n\\qquad\nB = \n\\begin{bmatrix}\n-4 \u0026 -2 \\\\ \n1 \u0026 0\n\\end{bmatrix} \\\\ \\\\\nA = \n\\begin{bmatrix}\nR_1 \\rightarrow 2 \u0026 6 \\\\ \nR_2 \\rightarrow 3 \u0026 -1 \n\\end{bmatrix} \n\\qquad\nB = \n\\begin{bmatrix}\nC_1 \u0026 C_2 \\\\\n\\downarrow \u0026 \\downarrow \\\\\n-4 \u0026 -2 \\\\ \n1 \u0026 0\n\\end{bmatrix} \\\\ \\\\\nA \\cdot B = \\begin{bmatrix}\nR_1 \\cdot C_1 \u0026 R_1 \\cdot C_2 \\\\ \nR_2 \\cdot C_1 \u0026 R_2 \\cdot C_2 \n\\end{bmatrix}\n\\end{align} \\\\\n$$\n\nThe easy way to tell whether or not you can multiply matrices is to line up their dimensions.\n\n$$\nAB: 2 \\times {\\color{green}{\\underline{3}} \\quad \\color{green}{\\underline{3}}} \\times 4\n$$\n\nIf the middle numbers match like they do here (they‚Äôre both $3$), then you can multiply the matrices to get a valid result.\n\nTo get the **dimensions of the product**, take the rows of the first matrix and the columns of the second matrix: \n\n$$\nAB: {\\color{green}{\\underline{2}}} \\times 3 \\quad 3 \\times {\\color{green}{\\underline{4}}}\n$$\n\n### Dot product\n\nFor instance, we said before that when we take the product $A \\cdot B$ for\n\n$$\n\\begin{align}\nA = \n\\begin{bmatrix}\n2 \u0026 6 \\\\ \n3 \u0026 -1 \n\\end{bmatrix}  \n\\qquad\nB = \n\\begin{bmatrix}\n-4 \u0026 -2 \\\\ \n1 \u0026 0\n\\end{bmatrix} \n\\end{align}\n$$\n\nthe first entry we‚Äôll need to find is the **dot product** of the first row in $A$ and the first column in $B$. The first row in $A$ is the ordered pair $(2,6)$, and the first column in $B$ is the ordered pair $(‚àí4,1)$.\n\nTo take the dot product of these ordered pairs, we take the product of the first values, and then add that result to the product of the second values. In other words, the dot product of $(2,6)$ and $(‚àí4,1)$ is\n\n$$\n\\begin{align}\n2 \\cdot (-4) + 6 \\cdot 1 \\\\\n-8 + 6\n-2 \n\\end{align}\n$$\n\nThe product of two $2 \\times 2$ matrices looks like this:\n\n$$\n\\begin{align}\n\\begin{bmatrix}\nR_{1,1} \u0026 R_{1,2} \\\\ \nR_{2,1} \u0026 R_{2,2} \n\\end{bmatrix}\n\\cdot\n\\begin{bmatrix}\nC_{1,1} \u0026 C_{1,2} \\\\ \nC_{2,1} \u0026 C_{2,2} \n\\end{bmatrix}\n= \\begin{bmatrix}\nR_{1,1}C_{1,1} + R_{1,2}C_{2,1} \u0026 R_{1,1}C_{1,2} + R_{1,2}C_{2,2} \\\\\nR_{2,1}C_{1,1} + R_{2,2}C_{2,1} \u0026 R_{2,1}C_{1,2} + R_{2,2}C_{2,2} \\\\\n\\end{bmatrix}\n\\end{align}\n$$\n\nTherefore, to find the product of matrices $A$ and $B$, we get \n\n$$\n\\begin{align}\nA \\cdot B = \n\\begin{bmatrix}\n2 \\cdot (-4) + 6 \\cdot 1 \u0026 2 \\cdot (-2) + 6 \\cdot 0 \\\\ \n3 \\cdot (-4) + (-1) \\cdot 1 \u0026 3 \\cdot (-2) + (-1) \\cdot 0\n\\end{bmatrix} \n= \\begin{bmatrix}\n-2 \u0026  -4\\\\ \n-13 \u0026 -6\n\\end{bmatrix} \n\\end{align}\n$$\n\n### Zero matrix\n\nMultiplying a matrix by the [[notes/math/linear-algebra/Zero matrix]], results in a zero matrix, but might have different dimensions. \n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Scalar-Division":{"title":"Matrix Scalar Division","content":"[[notes/math/linear-algebra/Matrix|Matrices]] can be divided by a scalar like this:\n\n$$\n\\frac{1}{6} \\cdot\n\\begin{bmatrix}\na \u0026 b \u0026 c \\\\ \nd \u0026 f \u0026 e\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\frac{1}{6}a \u0026 \\frac{1}{6}b \u0026 \\frac{1}{6}c \\\\ \n\\frac{1}{6}d \u0026 \\frac{1}{6}f \u0026 \\frac{1}{6}e\n\\end{bmatrix}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Scalar-Multiplication":{"title":"Matrix Scalar Multiplication","content":"Multiplying [[notes/math/linear-algebra/Matrix|matrix]] by a scalar can be done like:\n\n$$\n3 \\cdot\n\\begin{bmatrix}\na \u0026 b \u0026 c \\\\ \nd \u0026 f \u0026 e\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n3a \u0026 3b \u0026 3c \\\\ \n3d \u0026 3f \u0026 3e\n\\end{bmatrix}\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Subtraction":{"title":"Matrix Subtraction","content":"Subtracting [[notes/math/linear-algebra/Matrix|matrices]] is only defined for matrices with the same dimensions.\n\n$$\n\\begin{bmatrix}\na \u0026 b \\\\ \nc \u0026 d \n\\end{bmatrix} \n-\n\\begin{bmatrix}\ne \u0026 f \\\\ \ng \u0026 h \n\\end{bmatrix} \n=\n\\begin{bmatrix}\na - e \u0026 b - f \\\\ \nc - g \u0026 d - h \n\\end{bmatrix} \n$$\n\nSubtraction is \n- **NOT commutative** - $A - B \\neq B - A$ \n- **NOT associative**  - $(A - B) - C \\neq A - (B - C)$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Matrix-Transposition":{"title":"Matrix Transposition","content":"–¢he transpose of a [[notes/math/linear-algebra/Matrix|matrix]] is an operator which flips a matrix over its diagonal; that is, it switches the row and column indices of the matrix $A$ by producing another matrix, often denoted by $A^T$.\n\n$$\n\\text{if } A = (a_{ij}) \\text{ then } A^T=(a_{ji})\n$$\n\n### Properties\n\n- If $A$ has $m \\times n$ dimension, then $A^T$ is $n \\times m$ \n- $(A^T)^T = A$\n- $(k \\cdot A) ^T = k \\cdot A ^T$\n- $(A + B) ^ T = A^T + B^T$\n- $(A^T)^{-1} = (A^{-1})^T$\n\nMatrix $A$ is a symmetric matrix, if $A = A^T$. If both $A$ and $B$ are symmetric matrices, then their sum $A + B$ is also symmetrical. \n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Number-of-solutions-to-the-linear-system":{"title":"Number of solutions to the linear system","content":"[[notes/math/linear-algebra/Linear systems]] can have: \n\n### One solution (called _the unique solution_)\n\n$$\n\\begin{bmatrix}\n1 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 a\\\\\n0 \u0026 1 \u0026 0 \u0026 \\bigm| \u0026 b\\\\\n0 \u0026 0 \u0026 1 \u0026 \\bigm| \u0026 c\n\\end{bmatrix}\n\\rightarrow \n(x, y, z) = (a, b, c)\n$$\n\n### Infinitely many solutions\n\n$$\n\\begin{bmatrix}\n1 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 a\\\\\n0 \u0026 1 \u0026 0 \u0026 \\bigm| \u0026 b\\\\\n0 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 c\n\\end{bmatrix}\n\\text{ and } \nc = 0\n$$\n\n### No solutions\n\n$$\n\\begin{bmatrix}\n1 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 a\\\\\n0 \u0026 1 \u0026 0 \u0026 \\bigm| \u0026 b\\\\\n0 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 c\n\\end{bmatrix}\n\\text{ and } \nc \\neq 0\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Pivot-entries":{"title":"Pivot entries","content":"pivot entry - –≤–æ–¥–µ—â –µ–ª–µ–º–µ–Ω—Ç; \n\nThe non-zero element in each row of a [[notes/math/linear-algebra/Matrix|matrix]].\n\n$$\n\\begin{bmatrix}\n4 \u0026 1 \u0026 0 \u0026 \\bigm| \u0026 17\\\\\n0 \u0026 2 \u0026 5 \u0026 \\bigm| \u0026 10\\\\\n0 \u0026 0 \u0026 -3 \u0026 \\bigm| \u0026 2\n\\end{bmatrix} \n$$\n\nPivots: $4, 2, -3$.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Row-echelon-form":{"title":"Row-echelon form","content":"A [[notes/math/linear-algebra/Matrix|matrix]] is in **row-echelon form (ref)** if:\n- All the [[notes/math/linear-algebra/Pivot entries|pivot entries]] are equal to $1$\n- Any row's that consist of only $0$s are at the bottom of the matrix\n- The pivot in each row sists in a column to the right of the column that houses the pivot in the row above it. In other words, the pivot entries sit in a staircase pattern, where they stair-step down from the upper left corner to the lower right corner of the matrix.\n\nIf a matrix is in **row-echelon form**, and if, in each pivot column, the pivot entry is the only non-zero entry, then the matrix is in **reduced row-echelon form** (rref; —Ä–µ–¥—É—Ü–∏—Ä–∞–Ω–∞ –≥–æ—Ä–Ω–æ-—Ç—Ä–∏—ä–≥—ä–ª–Ω–∞ —Ñ–æ—Ä–º–∞): ^3c454c\n\n$$\n\\begin{bmatrix}\n1 \u0026 -2 \u0026 0 \u0026 0 \u0026 \\bigm| \u0026 3\\\\\n0 \u0026 0 \u0026 1 \u0026 0 \u0026 \\bigm| \u0026 4\\\\\n0 \u0026 0 \u0026 0 \u0026 1 \u0026 \\bigm| \u0026 -3\n\\end{bmatrix} \n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Simple-row-operation":{"title":"Simple row operation","content":"Performing simple row operations leads to finding solution to linear systems represented as a [[notes/math/linear-algebra/Matrix|matrix]] or finding the inverse of a [[notes/math/linear-algebra/Matrix|matrix]].\n\n### I. Switching rows $R_1 \\leftrightarrow R_2$\n\n$$\n\\begin{bmatrix}\n3 \u0026 2 \u0026\\bigm| \u0026 7\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n\\rightarrow\n\\begin{bmatrix}\n1 \u0026 -6 \u0026\\bigm| \u0026 0 \\\\ \n3 \u0026 2 \u0026\\bigm| \u0026 7\n\\end{bmatrix}\n$$\n\n### II. Multiplying a row by a constant $n * R_1 \\rightarrow R_1, n \\neq 0$\n\n$$\n\\begin{bmatrix}\n3 \u0026 2 \u0026\\bigm| \u0026 7\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n\\rightarrow\n\\begin{bmatrix}\n2 * 3 \u0026 2 * 2 \u0026\\bigm| \u0026 2 * 7\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n\\rightarrow\n\\begin{bmatrix}\n6 \u0026 4 \u0026\\bigm| \u0026 14\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n$$\n\n### III. Adding a row to another row $R_1 + R_2 \\rightarrow R_1$\n\n$$\n\\begin{bmatrix}\n3 \u0026 2 \u0026\\bigm| \u0026 7\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n\\rightarrow\n\\begin{bmatrix}\n3 + 1 \u0026 2 + (-6) \u0026\\bigm| \u0026 7 + 0\\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n\\rightarrow\n\n\\begin{bmatrix}\n4 \u0026 -4 \u0026\\bigm| \u0026 7 \\\\ \n1 \u0026 -6 \u0026\\bigm| \u0026 0 \n\\end{bmatrix} \n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Symmetric-Matrix":{"title":"Symmetric Matrix","content":"A **symmetric matrix** is a square matrix that is equal to its [[notes/math/linear-algebra/Matrix Transposition|transpose]].\n\nThe entries of a symmetric matrix are symmetric with respect to the main diagonal.\n\nFor every all indices $i \\text{ and } j, \\quad a_{ji} = a_{ij}$.\n\n![symmetric matrix representation](notes/assets/symmetric-matrix.svg)\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/math/linear-algebra/Zero-matrix":{"title":"Zero matrix","content":"Any [[notes/math/linear-algebra/Matrix|matrix]] that's full of only zeros, regardless of the dimensions of the matrix, we call a *zero matrix*. We always name the zero matrix with a capital $O$.\n\n[[notes/math/linear-algebra/Matrix Scalar Multiplication|Multiplying a matrix by scalar]] $0$ results in a *zero matrix*.\n$$\n0 \\cdot\n\\begin{bmatrix}\na \u0026 b \u0026 c \\\\ \nd \u0026 f \u0026 e\n\\end{bmatrix} \n= \\begin{bmatrix}\n0 \u0026 0 \u0026 0 \\\\ \n0 \u0026 0 \u0026 0\n\\end{bmatrix}\n$$\n\nAdding or subtracting the zero matrix to any other matrix doesn‚Äôt change the matrix‚Äôs value.\n$$\n\\begin{align}\nA + O = A\\\\\nA - O = A\n\\end{align}\n$$\n\nAdding **opposite matrices** always results in the zero matrix. Matrices $K$ and $‚àíK$ are opposite matrices. To get the oppposite of a matrix, multiply it by a scalar of $-1$: $-K = (-1)\\cdot K$.\n\n$$\nK + (-K) = O\n$$\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/programming/Count-Set-Bits":{"title":"Count Set Bits","content":"\nWrite a program to count set bits of an integer.\n\nSet bits:\n- `1` - set-bit\n- `0`- unset-bit","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/programming/cpp/Pointers-Arrays":{"title":"Pointers \u0026 Arrays","content":"## Pointers\n\nData \u0026 functions used in a program are stored inside the operative memory of the computer.\n\nEvery **byte** of the operative memory has a label, called *address*, represented by a hexadecimal number, prefixed with `0x`. Example: `0x6dfed4`. The first byte of the memory has address of `0x000000`, the next one's address is `0x000001`, 256th byte of the memory's address is `0x0000FF` = $255_{(10)}$ \n\nVariables, created to store addresses, are called pointers. Pointers are defined using a data type and the `*` operator, placed infront of the name of the variable:\n\n```cpp\nint *myPointer;\n```\n\nThe `\u0026` prefix causes the statement to evaluate to the memory address of the identifier, **so long as the identifier is a primitive type**.\n\n```cpp\nint x;\n\u0026x; // gets the address of x\n```\n\nThe address is **the first byte** of the sequence of bytes required to store the data of the specific type.\n\n```cpp\ndouble myVar = 4.00;\n\u0026d; // 0x0000C9 (201(10)) + 8 bytes = 0x0000D0 (208(10))\n```\n\nThe `\u0026` operator cannot be applied to unnamed constants or an arithmetic operation: `\u00265`, `\u0026(a-5)`.\n\nTo get the value of the variable the pointer is referrencing to use the `*` operator:\n\n```cpp\nstd::string food = \"Pizza\"; // Variable declaration  \nstd::string *ptr = \u0026food;// Pointer declaration  \n  \n// Reference: Output the memory address of food with the pointer (0x6dfed4)  \nstd::cout \u003c\u003c ptr \u003c\u003c \"\\n\";  \n  \n// Dereference: Output the value of food with the pointer (Pizza)  \nstd::cout \u003c\u003c *ptr \u003c\u003c \"\\n\";\n```\n\n\u003e If a pointer has the value of `0` or `NULL`, it does not point to data in the memory.\n\nA pointer can have the value of another pointer, provided they are of the same type.\n\n```cpp\nint *p1 = 0, *p2 = NULL;  \nint h = 10;  \np1 = \u0026h; p2 = p1;  \nstd::cout \u003c\u003c *p2 \u003c\u003c std::endl;\n```\n\nPointers can be assigned to data of the type they were defined with, unless they were defined as `void`. **Void pointers** can be assigned to pointers of all types, **with casting**. Pointers of all types can be assigned to void pointers **without casting**.\n\n```cpp\nvoid *v;  \nint *p;  \nint i = 0, j = 1;  \nv = \u0026i;  \np = (int *) v;  \nstd::cout \u003c\u003c *p \u003c\u003c std::endl;  \np = \u0026j;  \nv = p;  \nstd::cout \u003c\u003c *(int *) v \u003c\u003c std::endl;\n```\n\nIn the **constant pointers to constants**, the data pointed to by the pointer is constant and cannot be changed. The pointer itself is constant and cannot change and point somewhere else.\n\n```cpp\nconst int ci = 3; \nconst int *q = \u0026ci;\n```\n\nIn **constant pointers**, the pointer points to a fixed¬†memory location, and the value at that location can be changed because it is a variable, but the pointer will always point to the same location because it is made constant here.\n\nIn the **pointers to constant**, the data pointed by the pointer is constant and cannot be changed. Although, the pointer itself can change and points somewhere else (as the pointer itself is a variable).\n\nWe can create a pointer to a pointer that in turn may point to data or another pointer. The syntax simply requires the unary operator `*` for each level of indirection while declaring the pointer.\n\n```cpp\nchar a;\nchar *b;\nchar **c;\na = 'g';\nb = \u0026a;\nc = \u0026b;\n```\n\n**Pointer comparison** is done by comparing the addresses. **Incrementing** or **decrementing** the pointer, changes its address by the specified value multiplied by the number of bytes needed for its data type.\n\n## Arrays\n**Arrays** are made of multiple sequently ordered objects of the same data type. The name of the array is actually a **pointer**, that points to the first byte of the **first element**.\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/programming/cpp/Program-Components":{"title":"Program Components","content":"### Directives \nCode lines that start with `#` are read and interpreted by the preprocessor before the program is compiled.\n\n```cpp\n#include\u003ciostream\u003e // includes iostream header file\n```\n\n### `int main()` / –≥–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è\n\nSpecial function, contained in all **C++** programs, that is being called first when a program is run.\n\n### `;` terminates expression\n\n## Tokens\n\n### Keywords / Reserved words\n\n```\nauto double break else case enum char extern const float continue for default goto do if int long register return short signed sizeof static struct switch typedef union unsigned void volatile while asm bool catch class const_cast delete dynamic_cast explicit false friend inline mutable namespace new operator private protected public reinterpret_ cast static_cast template this throw true try typeid typename using virtual wchar_t\n```","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/programming/cpp/Very-short-history-of-C++":{"title":"Very short history of C++","content":"\nThe **C** language was created and developed alongside the UNIX OS\n\t- First version is created by Dennis Ritchie in 1973\n\t- In 1977 UNIX was rewritten in **C**\n\t- It was initially designed for developing operating systems, but other applications were soon found\n- American National Standards Institute, *ANSI*,  formed a committee, X3J11, to establish a standard specification of **C** in 1983\n- The prerelase Standard **C** was published in 1988, sometimes referred to as *C88*\n- Bjarne Stroustrup develops **C++** in 1983 at Bell Labs as an extension to **C**. **C++** is based on **C**, but it also features:\n\t- virtual functions\n\t- references\n\t- constants\n\t- inheritence\n\t- overloading\n\t- templates\n\t- exceptions\n\t- type-safe free-store memory allocation (`new`/`delete`)\n\t- improved type checking\n- Main difference between **C** and **C++** is that **C** is function-driven procedural language with no support for object and classes, whereas **C++** is a combination of procedural and object-oriented programming language.\n- Most programs written in **C** can be compiled with **C++** compiler with little to no changes\n- **C++** offers:\n\t- low level of abstraction \n\t- more control over the hardware\n\t- direct memory access\n\t- easy to run on multiple platforms\n- **C++** is not suitable for writing web applications","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/programming/rust/Notes-on-Rust":{"title":"Notes on Rust","content":"## Memory\n### Stack \n\nSpecial region of the process memory that stores variables created by each function.\n\nFor every function call a new **stack frame** is allocated on top of the current one.\n\nThe size of every variable on the stack has to be known at compile time.\n\nWhen a function exists its stack frame is released. \n\nThe stack is limited in size.\n\n**Stack frame** is the amount of memory allocated to a function, which is used to store all of the local variables and function parameters.\n\nIn the example below the **stack frame** will be large enough to store the two `int` values and the single `float32` type. Once the `main` has exited, the stack frame allocated on entry will be released.\n\n```rust\nfn main() \n{ \n\tlet a = 10; \n\tlet b = 20; \n\tlet pi = 3.14f32; \n}\n```\n\nStack overflow is achieved when we run out of stack space by allocating stack frames.\n\n### Heap\n\nRegion of the process memory that is **NOT** automatically managed.\n\nThe heap has no size restrictions, it's only limited by the system's resources.\n\nThe heap is is accessible by any function, anywhere in the program. \n\nHeap allocations are expensive and slow. Avoid them when possible.\n\n### Smart Pointers\n\nWrapper around the raw `Pointer` adding additional capabilities to it.\n\nCommon smart pointers in the standard library:\n\n-   `Box\u003cT\u003e`¬†for allocating values on the heap\n-   `Rc\u003cT\u003e`, a reference counting type that enables multiple ownership\n-   `Ref\u003cT\u003e`¬†and¬†`RefMut\u003cT\u003e`, accessed through¬†`RefCell\u003cT\u003e`, a type that enforces the borrowing rules at runtime instead of compile time\n\n## Data Types\n\n- Numbers: \n\t- `u8`, `u16`, `u32`, `u64`, `u128` - unsigned integer\n\t- `i8`, `i16`, `i32`, `i64`, `i128` - signed integers\n\t- `usize` / `isize`: unsigned/signed pointer-sized integers, thus its actual size depends on the architecture your are compiling your program for\n\t- `f32`: float numbers\n\t- `f64`: float with double precision\n- Boolean: `bool`\n- Single Unicode value: `char` (always 4 bytes)\n\n## Functions\n\nFunction parameters must have their typed specified.\n\nFunctions must have their return type specified.\n\nThe last line without a semicolon at the end is considered the `return` expression.\n\nExample:\n\n```rust\nfn calculate_weight_on_mars(weight: f32) -\u003e f32{  \n    weight  // same as return weight;\n}\n```\n\n## Macros\n\nIn short, rust code that generates more rust code. Quite powerful, but very complex and usually hard to maintain.\n\nTo distinguish a macro from a function call, look for the `!` üëÄ\n\nExample:\n\n```rust\nfn main() {\n\tprintln!(\"Hello world! From a macro.\")\n}\n```\n\n## Mutability\n\nVariables in Rust are immutable by default.\n\nTo make a variable mutable, use the keyword `mut`:\n\nExample:\n\n```rust\nlet mut weight = 51.14;\n```\n\n## Ownership\n\nRules of ownership, concept absent from most programming languages:\n1. Each value in Rust is owned by a variable\n2. When the owner goes out of scope, the value will be deallocated\n3. There can only be **ONE** owner at a time\n\nExample:\n\n```rust\nfn main() {  \n    let input: String = String::from(\"test\");  \n  \n    some_fn(input);  \n  \n    println!(\"Input is: {}\", input);  \n}  \n\nfn some_fn(s: String) {  \n    s;  \n}\n```\n\nThe value of `input` is not available to the `println!`  macro, because its ownership is transfered to `s` (of `some_fn`) and when `s`  goes out of scope it's deallocated and so is the value of `input`.\n\n### References \u0026 Borrowing\n\nImproving on the example above, we can actually pass `input` to `some_fn` without losing its value, by telling Rust we are going to pass it by reference:\n\n```rust\nfn main() {  \n    let input: String = String::from(\"test\");  \n    \n    some_fn(\u0026input);  \n    \n    println!(\"Input is: {}\", input);  \n}\n\nfn some_fn(s: \u0026String) {  \n    s;  \n}\n```\n\nHowever `s` in `some_fn` is immutable and if we want to update its value, the compiler won't let us.\n\nTo change that behaviour, we need not only to tell that we are passing reference to `some_fn`, but also tell it's going to be a mutable reference using `\u0026mut`.\n\nFinal code:\n\n```rust\nfn main() {  \n    let mut input: String = String::from(\"test\");  \n    some_fn(\u0026mut input);  \n    println!(\"Input is: {}\", input);  \n}  \n  \nfn some_fn(s: \u0026mut String) {  \n    s.push_str(\"!\");  \n}\n```\n\nIn the same scope, we can have only one mutable borrow or as many as we want immutable borrows.\n\nThe compiler won't let us have an immutable and mutable borrow at the same time.","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/projects/Self-Quizing":{"title":"Self Quizing","content":"## Idea\nCreate a plugin (script) that parses Obsidian notes with a specific tag \u0026 create flash cards or other form of content that allows people to self quiz themselves.","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/recreational/Bookshelf":{"title":"Bookshelf","content":"List of books I've read recently. It's more like a book journal, where I add notes for stuff I don't want to forget if I am taking a break from a series or cool quotes I liked. Major spoilers everywhere, and also 99% of the things are written in Bulgarian. ü§ì","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/recreational/Movies":{"title":"Movies","content":"","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/recreational/TV-Shows":{"title":"TV Shows","content":"Based on the data I've been logging in [trakt.tv](https://trakt.tv/users/fakeheal) for the past 6 years, I've watched more than 5500 episodes of shows. üò±  Heres my top list.\n\n\u003e **Disclaimer:** I am a sucker for feel-good wholesome sitcoms.\n\n## Parks \u0026 Recreation\n\n## Community\n\n## Brooklyn Nine-Nine\n\n## Breaking Bad\n\n","lastmodified":"2022-12-29T22:08:00.947376721Z","tags":null},"/notes/recreational/books/Mathematics-for-Fairies":{"title":"Mathematics for Fairies","content":"# Quotes\n\n# Notes","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/notes/recreational/books/Percy-Jackson-and-the-Olympians":{"title":"Percy Jackson and the Olympians","content":"–§–µ–Ω—Ç—ä–∑–∏ –ø–æ—Ä–µ–¥–∏—Ü–∞ —Å–ª–µ–¥–≤–∞—â–∞—Ç–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ç–∞ –Ω–∞ –ø–æ–ª—É–±–æ–≥–æ–≤–µ, –¥–µ—Ü–∞ –Ω–∞ –≥—Ä—ä—Ü–∫–∏ –±–æ–≥–æ–≤–µ. \n\n## –ì–µ—Ä–æ–∏\n### –ü—ä—Ä—Å–∏\n–°–∏–Ω –Ω–∞ –ü–æ—Å–µ–π–¥–æ–Ω. –ò–º–∞ –°–î–í.\n### –ê–Ω–∞–±–µ—Ç\n–î—ä—â–µ—Ä—è –Ω–∞ –ê—Ç–∏–Ω–∞.\n### –ì—Ä–æ—É–≤—ä—Ä\n–°–∞—Ç–∏—Ä. –í –∫—Ä–∞—è –Ω–∞ –∫–Ω–∏–≥–∞ –ø—ä—Ä–≤–∞ –ø–æ–µ–º–∞ –ø–æ –ø—ä—Ç—è –Ω–∞ —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ –Ω–∞ –ü–∞–Ω.\n### –õ—é–∫\n–õ—é–∫ —Å–µ –ø—Ä–æ–≤–∞–ª—è –Ω–∞ –ø–æ–¥–≤–∏–≥, –∏–∑–≥—É–±–≤–∞–π–∫–∏ –∂–∏–≤–æ—Ç–∞ –Ω–∞ –¢–∞–ª–∏—è. –ö—Ä–æ–Ω–æ—Å –∑–∞–ø–æ—á–≤–∞ –¥–∞ –∫–æ–º—É–Ω–∏–∫–∏—Ä–∞ —Å –Ω–µ–≥–æ –∏ –≥–æ –ø—Ä–∏–≤–ª–∏—á–∞ –Ω–∞ —Å–≤–æ—è —Å—Ç—Ä–∞–Ω–∞.\n## –ò—Å—Ç–æ—Ä–∏—è\n### –ö–Ω–∏–≥–∞ 1: –ü–æ—Ö–∏—Ç–∏—Ç–µ–ª—è –Ω–∞ –º—ä–ª–Ω–∏–∏\n**–õ—é–∫** —É—Å–ø—è–≤–∞ –¥–∞ –æ—Ç–∫—Ä–∞–¥–Ω–µ –º—ä–ª–Ω–∏—è—Ç–∞ –Ω–∞ **–ó–µ–≤—Å**, –¥–∞–≤–∞ —è –Ω–∞ **–ê—Ä–µ—Å** —Å –æ–±–µ—â–∞–Ω–∏–µ—Ç–æ, —á–µ –∞–∫–æ —è —É–∫—Ä–∏–µ –∑–∞ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –≤—Ä–µ–º–µ, —â–µ —Å–µ –ø–æ–ª—É—á–∏ –≤–æ–π–Ω–∞ –º–µ–∂–¥—É **–ü–æ—Å–µ–π–¥–æ–Ω** –∏ **–ó–µ–≤—Å**, –≤ –∫–æ—è—Ç–æ —â–µ –±—ä–¥–µ –≤—ä–≤–ª–µ—á–µ–Ω —Ü–µ–ª–∏—è —Å–≤—è—Ç.\n\n**–ü—ä—Ä—Å–∏**, –∑–∞–µ–¥–Ω–æ —Å **–ê–Ω–∞–±–µ—Ç** –∏ **–ì—Ä–æ—É–≤—ä—Ä**, —Å–µ –æ—Ç–ø—Ä–∞–≤—è—Ç –Ω–∞ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Ü–µ–ª—è—â–æ –¥–∞ –Ω–∞–º–µ—Ä—è—Ç –º—ä–ª–Ω–∏—è—Ç–∞ –Ω–∞ **–ó–µ–≤—Å**. –û—Ç–∏–≤–∞—Ç –ø—Ä–∏ **–•–∞–¥–µ—Å**, —É –∫–æ–≥–æ—Ç–æ –º–∏—Å–ª—è—Ç, —á–µ —Å–µ –Ω–∞–º–∏—Ä–∞ –º—ä–ª–Ω–∏—è—Ç–∞, –Ω–æ —Å–µ –æ–∫–∞–∑–≤–∞, —á–µ –∏ –Ω–∞ –•–∞–¥–µ—Å –º—É –ª–∏–ø—Å–≤–∞ –Ω–µ—â–æ -- —à–ª–µ–º–∞.\n\n–¢–∞–∫–∞ –æ—Å—ä–∑–Ω–∞–≤–∞—Ç, —á–µ –Ω—è–∫–æ–π –¥—Ä—É–≥ —Å–µ–¥–∏ –∑–∞–¥ –∏–∑—á–µ–∑–≤–∞–Ω–µ—Ç–æ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∏—Ç–µ –Ω–∞ –±–æ–≥–æ–≤–µ—Ç–µ. –®–ª–µ–º–∞ –∏ –º—ä–ª–Ω–∏—è—Ç–∞, —É–¥–æ–±–Ω–æ —Å–µ –æ–∫–∞–∑–≤–∞—Ç —É **–ü—ä—Ä—Å–∏**, –Ω–∞–≥–ª–∞—Å–µ–Ω–æ –æ—Ç **–ê—Ä–µ—Å**. \n\n–°–ª–µ–¥ –≤—Ä—ä—â–∞–Ω–µ—Ç–æ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∏—Ç–µ, **–õ—é–∫** —Å–µ —Ä–∞–∑–∫—Ä–∏–≤–∞, —á–µ –ø—Ä–∏–µ–º–∞ –∑–∞–ø–æ–≤–µ–¥–∏ –æ—Ç **–ö—Ä–æ–Ω–æ—Å**. \n\n*–ö—Ä–∞–π –Ω–∞ –∫–Ω–∏–≥–∞ I*\n\n## –ë–µ–ª–µ–∂–∫–∏","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/algorithm/":{"title":"Algorithm","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/definition/":{"title":"Definition","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/graph-theory/":{"title":"Graph Theory","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/number-theory/":{"title":"Number Theory","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/productivity/":{"title":"Productivity","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null},"/tags/project/":{"title":"Project","content":"","lastmodified":"2022-12-29T22:08:00.951376785Z","tags":null}}